{"version":3,"sources":["pages/Introduction.js","components/Footer.js","components/PayoffMatrix2D.js","pages/Hawkdove.js","pages/HawkdoveSim.js","pages/HawkdoveSandbox.js","components/ImitationSimulation.js","components/SimulationGraph.js","pages/Ess.js","pages/EssSandbox.js","components/PayoffMatrix3D.js","pages/Fakefighting.js","components/ImitationSimulation3D.js","pages/FakefightingSim.js","pages/FakefightingSandbox.js","pages/Conclusion.js","App.js","index.js"],"names":["Copyright","Typography","variant","color","align","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","Introduction","classes","React","useEffect","window","scrollTo","Grid","container","component","className","CssBaseline","Slide","direction","in","mountOnEnter","unmountOnExit","timeout","item","xs","sm","md","Paper","elevation","square","Fade","Avatar","Box","lineHeight","fullWidth","to","style","textDecoration","Button","size","BottomNavigation","onChange","event","newValue","goto","location","pathname","concat","href","setValue","showLabels","BottomNavigationAction","label","value","icon","Link","Date","getFullYear","Navigation","props","this","nextURL","buttonText","setURL","mt","mb","Component","PayoffMatrix","TableContainer","width","pt","Table","aria-label","TableHead","TableRow","TableCell","TableBody","key","scope","Tooltip","title","arrow","v","d","justifyContent","field","Hawkdove","useState","setV","setD","Container","maxWidth","m","parseInt","autoComplete","TextField","id","defaultValue","e","target","text","HawkdoveSandbox","placeholder","toString","substring","getESS","population","Chart","state","data","popStats","Bird","strategy","payoff","PopulationStatistics","round","hawk","dove","hawkRatio","initializePopulation","p","i","out","Math","floor","determinePayoff","player","opponent","updatePayoffs","pop","Array","length","keys","bird","random","updatePopulation","k","compareTo","countPopulation","ImitationSimulation","run","q","n","x","push","console","log","map","row","Ess","showResults","setShowResults","FormControlLabel","control","onClick","parseFloat","EssSandbox","setP","setQ","z","setZ","setK","setN","setRun","alert","disabled","PayoffMatrix3D","c","Fakefighting","setC","crow","crowRatio","doveRatio","r","ImitationSimulation3D","FakefightingSim","FakefightingSandbox","setR","form","marginTop","submit","Conclusion","formaction","replace","App","exact","path","HawkdoveSim","ReactDOM","render","document","getElementById"],"mappings":"4eAoBA,SAASA,IACP,OACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,UAAxD,8BAEE,6BAFF,qBAeJ,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,OAAQ,SAEVC,MAAO,CACLC,gBAAiB,oHACjBC,iBAAkB,YAClBC,gBACyB,UAAvBN,EAAMO,QAAQC,KAAmBR,EAAMO,QAAQE,KAAK,IAAMT,EAAMO,QAAQE,KAAK,KAC/EC,eAAgB,QAChBC,mBAAoB,UAEtBC,MAAO,CACLC,OAAQb,EAAMc,QAAQ,EAAG,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNL,OAAQb,EAAMc,QAAQ,GACtBR,gBAAiBN,EAAMO,QAAQY,UAAUC,UAM9B,SAASC,IACtB,IAAMC,EAAUxB,IAMhB,OAJAyB,IAAMC,WAAU,WACdC,OAAOC,SAAS,EAAG,KAClB,IAGD,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OAAOC,UAAWR,EAAQrB,MAClD,kBAAC8B,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAOC,UAAU,QAAQC,IAAI,EAAMC,cAAY,EAACC,eAAa,EAACC,QAAS,KACrE,kBAACV,EAAA,EAAD,CAAMW,MAAI,EAACC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAGX,UAAWR,EAAQnB,SAGzD,kBAAC6B,EAAA,EAAD,CAAOC,UAAU,OAAOC,IAAI,EAAMC,cAAY,EAACC,eAAa,EAACC,QAAS,KACtE,kBAACV,EAAA,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGZ,UAAWa,IAAOC,UAAW,EAAGC,QAAM,GACrE,yBAAKd,UAAWR,EAAQV,OACtB,kBAACiC,EAAA,EAAD,CAAMX,IAAI,EAAMG,QAAS,MACvB,kBAACS,EAAA,EAAD,CAAQhB,UAAWR,EAAQJ,QACzB,kBAAC,IAAD,QAIJ,kBAAC2B,EAAA,EAAD,CAAMX,IAAI,EAAMG,QAAS,MACvB,kBAAC3C,EAAA,EAAD,CAAYmC,UAAU,KAAKlC,QAAQ,MACjC,kBAACoD,EAAA,EAAD,CAAKC,WAAY,GAAjB,8BAMJ,kBAACH,EAAA,EAAD,CAAMX,IAAI,EAAMG,QAAS,MACvB,kBAAC3C,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,GAAjB,6NAMA,kBAACD,EAAA,EAAD,KACE,8BAEF,kBAACA,EAAA,EAAD,CAAKC,WAAY,GAAjB,gOAKA,kBAACD,EAAA,EAAD,KACE,8BAEF,kBAACA,EAAA,EAAD,CAAKC,WAAY,GAAjB,+CAC8C,6DAD9C,sGAOJ,kBAACD,EAAA,EAAD,KACE,8BAGF,kBAACA,EAAA,EAAD,CAAKE,WAAW,GACd,kBAACJ,EAAA,EAAD,CAAMX,IAAI,EAAMG,QAAS,KACvB,kBAAC,IAAD,CAASa,GAAG,YAAYC,MAAO,CAAEC,eAAgB,SAC/C,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQL,WAAW,EAAMtD,QAAQ,YAAYC,MAAM,WAAhE,YAON,kBAACmD,EAAA,EAAD,KACE,8BAEF,kBAACA,EAAA,EAAD,KACE,8BAGF,kBAACF,EAAA,EAAD,CAAMX,IAAI,EAAMG,QAAS,KACzB,kBAACV,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAWR,EAAQV,OACjC,kBAACe,EAAA,EAAD,qCAEM,8BAEN,kBAAC4B,EAAA,EAAD,CACEC,SAAU,SAACC,EAAOC,IArHhC,SAAkBA,GAChB,IACIC,EADalC,OAAOmC,SAASC,SACXC,OAAO,KAAOJ,GACpCjC,OAAOmC,SAASG,KAAOJ,EAmHTK,CAASN,IAEXO,YAAU,GAEV,kBAACC,EAAA,EAAD,CAAwBC,MAAM,0CAA0CC,MAAM,kBAAkBC,KAAM,kBAAC,IAAD,QACtG,kBAACH,EAAA,EAAD,CAAwBC,MAAM,0CAA0CC,MAAM,aAAaC,KAAM,kBAAC,IAAD,QACjG,kBAACH,EAAA,EAAD,CAAwBC,MAAM,2BAA2BC,MAAM,sBAAsBC,KAAM,kBAAC,IAAD,WAK/F,kBAACtB,EAAA,EAAD,KACE,8BAEF,kBAACA,EAAA,EAAD,KACE,8BAEF,kBAACA,EAAA,EAAD,KACE,8BAEF,kBAACF,EAAA,EAAD,CAAMX,IAAI,EAAMG,QAAS,KACzB,kBAACV,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMW,MAAI,EAACC,IAAE,GACX,kBAAC+B,EAAA,EAAD,CAAMP,KAAK,yCAAyCpE,QAAQ,SAA5D,mBAIF,kBAACgC,EAAA,EAAD,CAAMW,MAAI,GACR,kBAACgC,EAAA,EAAD,CAAMP,KAAK,qFAAqFpE,QAAQ,SACrG,0BAIP,kBAACgC,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAWR,EAAQV,OAC/B,kBAACnB,EAAD,a,+DCxKhB,SAASA,IACL,OACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,UACrD,kBACD,kBAACyE,EAAA,EAAD,CAAM1E,MAAM,UAAUmE,KAAK,0CAA3B,kBAEQ,KACP,IAAIQ,MAAOC,cACX,KAKF,IA4CQC,EA5Cf,YACI,WAAYC,GAAQ,qEACZA,IAFZ,sEAKc,IAAD,OACP,OACA,kBAAC/C,EAAA,EAAD,KACE,kBAACoB,EAAA,EAAD,CAAKE,WAAW,GAChB,6BACA,kBAAC,IAAD,CAASC,GAAIyB,KAAKD,MAAME,QAASzB,MAAO,CAAEC,eAAgB,SACxD,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQL,WAAW,EAAMtD,QAAQ,YAAYC,MAAM,WAC7D+E,KAAKD,MAAMG,cAKlB,kBAAC9B,EAAA,EAAD,KACE,6BACA,6BACA,kBAACQ,EAAA,EAAD,CACEC,SAAU,SAACC,EAAOC,GAChB,EAAKgB,MAAMI,OAAOpB,IAEpBO,YAAU,GAEV,kBAACC,EAAA,EAAD,CAAwBC,MAAM,eAAeC,MAAM,OAAOC,KAAM,kBAAC,IAAD,QAChE,kBAACH,EAAA,EAAD,CAAwBC,MAAM,0CAA0CC,MAAM,kBAAkBC,KAAM,kBAAC,IAAD,QACtG,kBAACH,EAAA,EAAD,CAAwBC,MAAM,uCAAuCC,MAAM,aAAaC,KAAM,kBAAC,IAAD,QAC9F,kBAACH,EAAA,EAAD,CAAwBC,MAAM,wBAAwBC,MAAM,sBAAsBC,KAAM,kBAAC,IAAD,QACxF,kBAACH,EAAA,EAAD,CAAwBC,MAAM,aAAaC,MAAM,aAAaC,KAAM,kBAAC,IAAD,UAIxE,kBAACtB,EAAA,EAAD,CAAKgC,GAAI,EAAGC,GAAI,GACd,6BACA,kBAAC,EAAD,YApCR,GAAgCzD,IAAM0D,W,+DCgCvBC,GAjDf,YACI,WAAYR,GAAQ,qEACZA,IAFZ,sEAMM,OACE,kBAAC/C,EAAA,EAAD,KACA,kBAACwD,EAAA,EAAD,CAAgBtD,UAAWa,IAAOS,MAAO,CAAEiC,MAAO,QAAUC,GAAI,GAC9D,kBAACC,EAAA,EAAD,CAAQhC,KAAK,QAAQiC,aAAW,iBAC9B,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,UACA,kBAACA,EAAA,EAAD,CAAW7F,MAAM,SAAQ,oCACzB,kBAAC6F,EAAA,EAAD,CAAW7F,MAAM,SAAQ,sCAG7B,kBAAC8F,EAAA,EAAD,KACE,kBAACF,EAAA,EAAD,CAAUG,IAAI,QACZ,kBAACF,EAAA,EAAD,CAAW7D,UAAU,KAAKgE,MAAM,OAC9B,oCAEF,kBAACC,EAAA,EAAD,CAASC,MAAM,wIAAwIC,OAAK,GAC1J,kBAACN,EAAA,EAAD,CAAW7F,MAAM,UAAU8E,KAAKD,MAAMuB,EAAEtB,KAAKD,MAAMwB,GAAG,IAExD,kBAACJ,EAAA,EAAD,CAASC,MAAM,mHAAmHC,OAAK,GACrI,kBAACN,EAAA,EAAD,CAAW7F,MAAM,SAAS8E,KAAKD,MAAMuB,KAGzC,kBAACR,EAAA,EAAD,CAAUG,IAAI,QACZ,kBAACF,EAAA,EAAD,CAAW7D,UAAU,KAAKgE,MAAM,OAC9B,oCAEF,kBAACC,EAAA,EAAD,CAASC,MAAM,6GAA6GC,OAAK,GAC/H,kBAACN,EAAA,EAAD,CAAW7F,MAAM,SAAjB,MAEF,kBAACiG,EAAA,EAAD,CAASC,MAAM,iEAAiEC,OAAK,GACnF,kBAACN,EAAA,EAAD,CAAW7F,MAAM,SAAS8E,KAAKD,MAAMuB,EAAE,aArCzD,GAAkC1E,IAAM0D,WCGlCnF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,OAAQ,SAEVU,MAAO,CACLC,OAAQb,EAAMc,QAAQ,GACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZkF,eAAgB,UAElBjF,OAAQ,CACNL,OAAQb,EAAMc,QAAQ,GACtBR,gBAAiBN,EAAMO,QAAQY,UAAUC,MAE3CgF,MAAO,CACL,QAAS,CACPvF,OAAQb,EAAMc,QAAQ,GACtBsE,MAAO,aAOE,SAASiB,KACtB,IAAM/E,EAAUxB,KADiB,EAOfyB,IAAM+E,SAAS,KAPA,mBAO1BL,EAP0B,KAOvBM,EAPuB,OAQfhF,IAAM+E,SAAS,GARA,mBAQ1BJ,EAR0B,KAQvBM,EARuB,KA4BjC,OAZAjF,IAAMC,WAAU,WACdC,OAAOC,SAAS,EAAG,KAClB,IAWD,kBAAC+E,EAAA,EAAD,CAAW5E,UAAU,OAAO6E,SAAS,KAAK5E,UAAWR,EAAQrB,MAC3D,kBAAC8B,EAAA,EAAD,MACA,kBAACc,EAAA,EAAD,CAAMX,IAAI,EAAMG,QAAS,MACvB,kBAACV,EAAA,EAAD,CAAMW,MAAI,EAACT,UAAWa,IAAOC,UAAW,EAAGC,QAAM,GAC/C,yBAAKd,UAAWR,EAAQV,OACtB,kBAACkC,EAAA,EAAD,CAAQhB,UAAWR,EAAQJ,QACzB,kBAAC,IAAD,OAEF,kBAACxB,EAAA,EAAD,CAAYmC,UAAU,KAAKlC,QAAQ,MACjC,kBAACoD,EAAA,EAAD,CAAKC,WAAY,GAAjB,uBAIF,kBAACtD,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAG2D,EAxCd,EAwC4B5B,GAvCzB,EAuC2CC,GAtCxC,GAsCZ,uZAQA,kBAACjC,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EAhDf,EAgD6B5B,GA/C1B,EA+C4CC,GA9CzC,GA+CV,6BADF,0CAEyC,gCAFzC,iDAGK,gCAHL,snBAYE,6BACA,+BAIJ,kBAAC,GAAD,CAAciB,EAAGW,SAASX,GAAIC,EAAGU,SAASV,KAE1C,kBAACxG,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EApEf,EAoE6B5B,GAnE1B,EAmE4CC,GAlEzC,GAmEV,6BADF,6QAKiD,gCALjD,YAKkE,gCALlE,sGAOE,+BAKJ,0BAAM6B,aAAa,MAAM/E,UAAWR,EAAQ8E,OAC1C,kBAACU,EAAA,EAAD,CAAWC,GAAG,QAAQC,aAAcJ,SAASX,GAAIzF,KAAK,SAAS2D,MAAM,QAAQX,SAhEzF,SAAuByD,GACrBV,EAAKU,EAAEC,OAAO9C,UAgEJ,kBAAC0C,EAAA,EAAD,CAAWC,GAAG,SAASC,aAAcJ,SAASV,GAAI1F,KAAK,SAAS2D,MAAM,SAASX,SA7D3F,SAAuByD,GACrBT,EAAKS,EAAEC,OAAO9C,WA+DN,kBAAC1E,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EAtFf,EAsF6B5B,GArF1B,EAqF4CC,GApFzC,GAqFV,6BADF,okBAaE,+BAIJ,kBAAC,EAAD,CAAYH,WAAY,yBAA0BD,QAAS,sBAAuBE,OAhG5F,SAAgBpB,GACd,IACIC,EADalC,OAAOmC,SAASC,SACXC,OAAO,KAAOJ,GACpCjC,OAAOmC,SAASG,KAAOJ,SCrC3B,IAAM7D,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,OAAQ,SAEVU,MAAO,CACLC,OAAQb,EAAMc,QAAQ,GACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZkF,eAAgB,UAElBjF,OAAQ,CACNL,OAAQb,EAAMc,QAAQ,GACtBR,gBAAiBN,EAAMO,QAAQY,UAAUC,MAE3C+F,KAAM,CACJtG,OAAQb,EAAMc,QAAQ,QAMX,SAASsG,KACtB,IAAM9F,EAAUxB,KADwB,EAOtByB,IAAM+E,SAAS,KAPO,mBAOjCL,EAPiC,aAQtB1E,IAAM+E,SAAS,IARO,mBAQjCJ,EARiC,UA4BxC,OAZA3E,IAAMC,WAAU,WACdC,OAAOC,SAAS,EAAG,KAClB,IAWD,kBAAC+E,EAAA,EAAD,CAAW5E,UAAU,OAAO6E,SAAS,KAAK5E,UAAWR,EAAQrB,MAC3D,kBAAC8B,EAAA,EAAD,MACA,kBAACc,EAAA,EAAD,CAAMX,IAAI,EAAMG,QAAS,KAEzB,kBAACV,EAAA,EAAD,CAAMW,MAAI,EAACT,UAAWa,IAAOC,UAAW,EAAGC,QAAM,GAC/C,yBAAKd,UAAWR,EAAQV,OACtB,kBAACkC,EAAA,EAAD,CAAQhB,UAAWR,EAAQJ,QACzB,kBAAC,IAAD,OAEF,kBAACxB,EAAA,EAAD,CAAYmC,UAAU,KAAKlC,QAAQ,MACjC,kBAACoD,EAAA,EAAD,CAAKC,WAAY,GAAjB,uCAIF,kBAACtD,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAG2D,EAzCZ,EAyC0B5B,GAxCvB,EAwCyCC,GAvCtC,GAuCd,0nBASiC,gCATjC,QAS8C,gCAT9C,KAWA,kBAACjC,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EApDb,EAoD2B5B,GAnDxB,EAmD0CC,GAlDvC,GAmDZ,6BADF,uRAQF,kBAACjC,EAAA,EAAD,KACE,8BAEF,kBAAC,GAAD,CAAckD,EAAGW,SAASX,GAAIC,EAAGU,SAASV,KAC1C,kBAACxG,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EAjEb,EAiE2B5B,GAhExB,EAgE0CC,GA/DvC,GAgEZ,6BACA,8HAGA,+BAIJ,kBAACtF,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EA3Eb,EA2E2B5B,GA1ExB,EA0E0CC,GAzEvC,GA0EZ,6BADF,sJAG8D,gCAH9D,MAGyE,gCAHzE,iaAWF,kBAACjC,EAAA,EAAD,KACE,8BAEF,kBAAC,GAAD,CAAckD,EAAG,GAAIC,EAAG,KACxB,kBAACxG,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EA3Fb,EA2F2B5B,GA1FxB,EA0F0CC,GAzFvC,GA0FZ,6BACA,uJAGA,+BAIJ,kBAACtF,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EArGb,EAqG2B5B,GApGxB,EAoG0CC,GAnGvC,GAoGZ,6BADF,gMAMF,kBAACjC,EAAA,EAAD,KACE,8BAEF,kBAAC,GAAD,CAAckD,EAAG,EAAGC,EAAG,IACvB,kBAACxG,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EAhHb,EAgH2B5B,GA/GxB,EA+G0CC,GA9GvC,GA+GZ,6BACA,yGAGA,+BAIJ,kBAACtF,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EA1Hb,EA0H2B5B,GAzHxB,EAyH0CC,GAxHvC,GAyHZ,6BADF,iGAEgG,gCAFhG,MAE2G,gCAF3G,0TAMmC,uBAAGjB,KAAK,gDAAR,gBANnC,oDAO4C,kCAP5C,aAOgE,wCAPhE,sHASK,kCATL,YAYF,kBAAChB,EAAA,EAAD,KACE,8BAEF,kBAAC,GAAD,CAAckD,EAAG,GAAIC,EAAG,MACxB,kBAACxG,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EA3Ib,EA2I2B5B,GA1IxB,EA0I0CC,GAzIvC,GA0IZ,6BACA,4CACe,IADf,kJAIA,+BAMJ,kBAACtF,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EAxJb,EAwJ2B5B,GAvJxB,EAuJ0CC,GAtJvC,GAuJZ,6BADF,mMAKE,+BAIJ,kBAAC,EAAD,CAAYH,WAAY,sBAAuBD,QAAS,mBAAoBE,OA1JpF,SAAgBpB,GACd,IACIC,EADalC,OAAOmC,SAASC,SACXC,OAAO,KAAOJ,GACpCjC,OAAOmC,SAASG,KAAOJ,SCpC3B,IAAM7D,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,OAAQ,SAEVU,MAAO,CACLC,OAAQb,EAAMc,QAAQ,GACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZkF,eAAgB,UAElBjF,OAAQ,CACNL,OAAQb,EAAMc,QAAQ,GACtBR,gBAAiBN,EAAMO,QAAQY,UAAUC,MAE3C+F,KAAM,CACJtG,OAAQb,EAAMc,QAAQ,IAGxBsF,MAAO,CACL,QAAS,CACPvF,OAAQb,EAAMc,QAAQ,GACtBsE,MAAO,aAOE,SAASgC,KACtB,IAAM9F,EAAUxB,KADwB,EAOtByB,IAAM+E,SAAS,IAPO,mBAOjCL,EAPiC,KAO9BM,EAP8B,OAQtBhF,IAAM+E,SAAS,IARO,mBAQjCJ,EARiC,KAQ9BM,EAR8B,KAwCxC,OAhBAjF,IAAMC,WAAU,WACdC,OAAOC,SAAS,EAAG,KAClB,IAeD,kBAAC+E,EAAA,EAAD,CAAW5E,UAAU,OAAO6E,SAAS,KAAK5E,UAAWR,EAAQrB,MAC3D,kBAAC8B,EAAA,EAAD,MACA,kBAACc,EAAA,EAAD,CAAMX,IAAI,EAAMG,QAAS,KAEzB,kBAACV,EAAA,EAAD,CAAMW,MAAI,EAACT,UAAWa,IAAOC,UAAW,EAAGC,QAAM,GAC/C,yBAAKd,UAAWR,EAAQV,OACtB,kBAACkC,EAAA,EAAD,CAAQhB,UAAWR,EAAQJ,QACzB,kBAAC,IAAD,OAEF,kBAACxB,EAAA,EAAD,CAAYmC,UAAU,KAAKlC,QAAQ,MACjC,kBAACoD,EAAA,EAAD,CAAKC,WAAY,GAAjB,kCAIF,kBAACtD,EAAA,EAAD,CAAYmC,UAAU,KAEpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EAtDb,EAsD2B5B,GArDxB,EAqD0CC,GApDvC,GAqDZ,6BADF,wFAOF,0BAAM6B,aAAa,MAAM/E,UAAWR,EAAQ8E,OAC1C,kBAACU,EAAA,EAAD,CAAWC,GAAG,QAAQM,YAAaT,SAASX,GAAIzF,KAAK,SAAS2D,MAAM,QAAQX,SAjDtF,SAAuByD,GACrBV,EAAKU,EAAEC,OAAO9C,UAiDN,kBAAC0C,EAAA,EAAD,CAAWC,GAAG,SAASM,YAAaT,SAASV,GAAI1F,KAAK,SAAS2D,MAAM,SAASX,SA9CxF,SAAuByD,GACrBT,EAAKS,EAAEC,OAAO9C,WA+CR,kBAACrB,EAAA,EAAD,KACE,8BAGF,kBAAC,GAAD,CAAckD,EAAGW,SAASX,GAAIC,EAAGU,SAASV,KAE1C,kBAACxG,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EAxEb,EAwE2B5B,GAvExB,EAuE0CC,GAtEvC,GAuEZ,6BACA,2DAhDZ,SAAgBiB,EAAGC,GAGjB,OAAS,GAALD,GAAe,GAALC,EACL,kBACEU,SAASX,GAAKW,SAASV,GACzB,KAAQ,GAAMoB,WAAa,YAAc,GAAMA,WAAa,UAE9D,MAAQrB,EAAEC,GAAGoB,WAAWC,UAAU,EAP5B,GAOyC,YAAe,EAAEtB,EAAEC,GAAIoB,WAAWC,UAAU,EAPrF,GAOkG,UA0CpGC,CAAOvB,EAAGC,IAEX,+BAOJ,kBAACxG,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EAtFb,EAsF2B5B,GArFxB,EAqF0CC,GApFvC,GAqFZ,6BADF,4GAIE,+BAIJ,kBAAC,EAAD,CAAYH,WAAY,uBAAwBD,QAAS,OAAQE,OAvFzE,SAAgBpB,GACd,IACIC,EADalC,OAAOmC,SAASC,SACXC,OAAO,KAAOJ,GACpCjC,OAAOmC,SAASG,KAAOJ,S,WC+BvB8D,GCzDWC,GAlBf,YACE,WAAYhD,GAAQ,IAAD,8BACjB,4CAAMA,KACDiD,MAAQ,CACTC,KAAM,EAAKlD,MAAMmD,UAHJ,EADrB,sEAUE,OACI,kCAXN,GAA2BtG,IAAM0D,WDD3B6C,GACJ,WAAYC,EAAUC,GAAS,oBAC7BrD,KAAKoD,SAAWA,EAChBpD,KAAKqD,OAASA,GAKZC,GACJ,WAAYC,EAAOC,EAAMC,EAAMC,GAAY,oBACzC1D,KAAKuD,MAAQA,EACbvD,KAAKwD,KAAOA,EACZxD,KAAKyD,KAAOA,EACZzD,KAAK0D,UAAYA,GAKjBC,GAAuB,SAACC,EAAGtC,GAC7B,IACIuC,EADAC,EAAM,GAEV,IAAKD,EAAI,EAAGA,EAAIE,KAAKC,MAAMJ,EAAEtC,GAAIuC,IAC/BC,EAAID,GAAK,IAAIV,GAAK,EAAG,GAEvB,IAAKU,EAAIE,KAAKC,MAAMJ,EAAEtC,GAAIuC,EAAID,EAAGC,IAC/BC,EAAID,GAAK,IAAIV,GAAK,EAAG,GAEvB,OAAOW,GAILG,GAAkB,SAAC3C,EAAGC,EAAG2C,EAAQC,GACnC,OAAuB,GAAnBD,EAAOd,UAAsC,GAArBe,EAASf,UAC3B9B,EAAEC,GAAG,EACe,GAAnB2C,EAAOd,UAAsC,GAArBe,EAASf,SACnC9B,EACqB,GAAnB4C,EAAOd,UAAsC,GAArBe,EAASf,SACnC,EAEA9B,EAAE,GAIT8C,GAAgB,SAACC,EAAK/C,EAAGC,GAAO,IAAD,uBACjC,YAAgB+C,MAAMD,EAAIE,QAAQC,OAAlC,+CAA0C,CAAC,IACrCC,EAAOJ,EAD6B,SAElCF,EAAWE,EAAIN,KAAKC,MAAMD,KAAKW,SAAWX,KAAKC,MAAMK,EAAIE,UAC/DE,EAAKpB,OAASY,GAAgB3C,EAAGC,EAAGkD,EAAMN,IAJX,oFAQ/BQ,GAAmB,SAACN,EAAKO,GAAO,IAAD,uBACjC,YAAgBN,MAAMM,GAAGJ,OAAzB,+CAAiC,SAAC,IAC5BC,EAAOJ,EAAIN,KAAKC,MAAMD,KAAKW,SAAWX,KAAKC,MAAMK,EAAIE,UACnDM,EAAYR,EAAIN,KAAKC,MAAMD,KAAKW,SAAWX,KAAKC,MAAMK,EAAIE,UAC5DM,EAAUxB,OAASoB,EAAKpB,SAC1BoB,EAAKrB,SAAWyB,EAAUzB,WALG,oFAU/B0B,GAAkB,SAAChC,GACrB,IAAIU,EAAO,EACPC,EAAO,EAFyB,uBAGpC,YAAgBa,MAAMxB,EAAWyB,QAAQC,OAAzC,+CAAiD,CAE1B,GADR1B,EADkC,SAEtCM,SACPI,GAAQ,EAERC,GAAQ,GARwB,kFAWpC,MAAO,CAACD,EAAMC,EAAOD,GAAOA,EAAKC,KAG/BP,GAAW,GAqEA6B,GAlEf,YAEE,WAAYhF,GAAQ,IAAD,uBACjB,4CAAMA,KACDiD,MAAQ,CACXgC,IAAK,EAAKjF,MAAMiF,KAElBlC,GAAaa,GAAqB,EAAK5D,MAAM6D,EAAG,EAAK7D,MAAMkF,GAC3D/B,GAAW,GANM,2BAQjB,YAAgBoB,MAAM,EAAKvE,MAAMmF,GAAGV,OAApC,+CAA4C,CAAC,IAAlCX,EAAiC,UACZiB,GAAgBhC,IADJ,mBACrCU,EADqC,KAC/BC,EAD+B,KACzBC,EADyB,KAEtCyB,EAAI,IAAI7B,GAAqBO,EAAGL,EAAMC,EAAMC,GAChDR,GAASkC,KAAKD,GACdf,GAActB,GAAY,EAAK/C,MAAMuB,EAAG,EAAKvB,MAAMwB,GACnDoD,GAAiB7B,GAAY,EAAK/C,MAAM6E,IAbzB,2FAFrB,kFAoBIS,QAAQC,IAAItF,KAAKD,MAAMkF,GACvBnC,GAAaa,GAAqB3D,KAAKD,MAAM6D,EAAG5D,KAAKD,MAAMkF,GAC3D/B,GAAW,GAHQ,2BAKnB,YAAgBoB,MAAMtE,KAAKD,MAAMmF,GAAGV,OAApC,+CAA4C,CAAC,IAAlCX,EAAiC,UACZiB,GAAgBhC,IADJ,mBACrCU,EADqC,KAC/BC,EAD+B,KACzBC,EADyB,KAEtCyB,EAAI,IAAI7B,GAAqBO,EAAGL,EAAMC,EAAMC,GAChDR,GAASkC,KAAKD,GACdf,GAActB,GAAY9C,KAAKD,MAAMuB,EAAGtB,KAAKD,MAAMwB,GACnDoD,GAAiB7B,GAAY9C,KAAKD,MAAM6E,IAVvB,qFAnBvB,+BAkCI,OACE,kBAAC5H,EAAA,EAAD,CAAME,UAAWa,KACf,kBAAC,GAAD,CAAOmF,SAAUA,KACjB,kBAAC1C,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAOhC,KAAK,QAAQiC,aAAW,gBAC/B,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAW,qCACX,kBAACA,EAAA,EAAD,CAAW7F,MAAM,SAAQ,qCACzB,kBAAC6F,EAAA,EAAD,CAAW7F,MAAM,SAAQ,qCACzB,kBAAC6F,EAAA,EAAD,CAAW7F,MAAM,SAAQ,iDAG7B,kBAAC8F,EAAA,EAAD,KACGkC,GAASqC,KAAI,SAACC,GAAD,OACZ,kBAAC1E,EAAA,EAAD,CAAUG,IAAK,QAAUuE,EAAIjC,OAC3B,kBAACxC,EAAA,EAAD,CAAW7D,UAAU,KAAKgE,MAAM,OAC7BsE,EAAIjC,OAEP,kBAACxC,EAAA,EAAD,CAAW7F,MAAM,SAASsK,EAAIhC,MAC9B,kBAACzC,EAAA,EAAD,CAAW7F,MAAM,SAASsK,EAAI/B,MAC9B,kBAAC1C,EAAA,EAAD,CAAW7F,MAAM,SAASsK,EAAI9B,uBAvDhD,GAAyC9G,IAAM0D,W,UEzEzCnF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,OAAQ,SAEVU,MAAO,CACLC,OAAQb,EAAMc,QAAQ,GACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZkF,eAAgB,UAElBjF,OAAQ,CACNL,OAAQb,EAAMc,QAAQ,GACtBR,gBAAiBN,EAAMO,QAAQY,UAAUC,MAE3C+F,KAAM,CACJtG,OAAQb,EAAMc,QAAQ,QAMX,SAASsJ,KACtB,IAAM9I,EAAUxB,KADY,EAOVyB,IAAM+E,SAAS,KAPL,mBAOrBL,EAPqB,aAQV1E,IAAM+E,SAAS,IARL,mBAQrBJ,EARqB,aASV3E,IAAM+E,SAAS,MATL,mBASrBiC,EATqB,aAUVhH,IAAM+E,SAAS,KAVL,mBAUrBsD,EAVqB,aAWVrI,IAAM+E,SAAS,MAXL,mBAWrBiD,EAXqB,aAYVhI,IAAM+E,SAAS,KAZL,mBAYrBuD,EAZqB,UAoB5BtI,IAAMC,WAAU,WACdC,OAAOC,SAAS,EAAG,KAClB,IAtByB,MA2CUH,IAAM+E,UAAS,GA3CzB,mBA2CrB+D,EA3CqB,KA2CRC,EA3CQ,KAgD5B,OACE,kBAAC7D,EAAA,EAAD,CAAW5E,UAAU,OAAO6E,SAAS,KAAK5E,UAAWR,EAAQrB,MAC3D,kBAAC8B,EAAA,EAAD,MACA,kBAACc,EAAA,EAAD,CAAMX,IAAI,EAAMG,QAAS,KAEzB,kBAACV,EAAA,EAAD,CAAMW,MAAI,EAACT,UAAWa,IAAOC,UAAW,EAAGC,QAAM,GAE/C,yBAAKd,UAAWR,EAAQV,OACtB,kBAACkC,EAAA,EAAD,CAAQhB,UAAWR,EAAQJ,QACzB,kBAAC,IAAD,OAEF,kBAACxB,EAAA,EAAD,CAAYmC,UAAU,KAAKlC,QAAQ,MACjC,kBAACoD,EAAA,EAAD,CAAKC,WAAY,GAAjB,4BAIF,kBAACtD,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAG2D,EA9DZ,EA8D0B5B,GA7DvB,EA6DyCC,GA5DtC,GA4Dd,wCACuC,gCADvC,yCACqF,gCADrF,kGAGQ,gCAHR,oDAGiE,gCAHjE,sFAMA,kBAACjC,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EApEb,EAoE2B5B,GAnExB,EAmE0CC,GAlEvC,GAmEZ,6BADF,+LAG0G,gCAH1G,8MAMiC,gCANjC,sGASA,kBAACjC,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EA7Eb,EA6E2B5B,GA5ExB,EA4E0CC,GA3EvC,GA4EZ,6BADF,2BAE0B,gCAF1B,MAEsCiB,EAFtC,KAE0C,gCAF1C,MAEsDC,EAFtD,KAE0D,gCAF1D,MAEsEqC,EAFtE,KAE0E,gCAF1E,MAEsFqB,EAFtF,KAE0F,gCAF1F,MAEsGL,EAFtG,SAE8G,gCAF9G,MAE0HM,EAF1H,wCAKF,kBAAC9G,EAAA,EAAD,KACE,8BAEF,kBAAC,GAAD,CAAckD,EAAGW,SAASX,GAAIC,EAAGU,SAASV,KAE1C,kBAACxG,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EAxFb,EAwF2B5B,GAvFxB,EAuF0CC,GAtFvC,GAuFZ,6BADF,iDAEiDuD,EAFjD,WAE4DA,EAAEqB,EAF9D,qDAGUL,EAHV,6IAI2BM,EAJ3B,yUAOE,+BAGJ,kBAAC9G,EAAA,EAAD,KACE,8BAIF,kBAACwH,GAAA,EAAD,CACEC,QACE,kBAACnH,EAAA,EAAD,CAAQ1D,QAAQ,WAAWC,MAAM,UAAU6K,QAhEvD,WACEH,GAAe,KA+DL,oBAKJ,kBAACvH,EAAA,EAAD,KACE,8BAGF,kBAACpB,EAAA,EAAD,KACI0I,EAAc,kBAAC1I,EAAA,EAAD,CAAMG,UAAWR,EAAQV,OACvC,kBAAC,GAAD,CAAqBqF,EAAGW,SAASX,GAAIC,EAAGU,SAASV,GAAIqC,EAAG3B,SAAS2B,GAAIqB,EAAGc,WAAWd,GAAIL,EAAG3C,SAAS2C,GAAIM,EAAGjD,SAASiD,KACnH,kBAACnK,EAAA,EAAD,CAAYmC,UAAU,KACxB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EAtHb,EAsH2B5B,GArHxB,EAqH0CC,GApHvC,GAqHZ,6BADF,wOAME,gCAIC,MAKL,kBAAC,EAAD,CAAYH,WAAY,sBAAuBD,QAAS,cAAeE,OA1H/E,SAAgBpB,GACd,IACIC,EADalC,OAAOmC,SAASC,SACXC,OAAO,KAAOJ,GACpCjC,OAAOmC,SAASG,KAAOJ,SCvC3B,IAAM7D,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,OAAQ,SAEVU,MAAO,CACLC,OAAQb,EAAMc,QAAQ,GACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZkF,eAAgB,UAElBjF,OAAQ,CACNL,OAAQb,EAAMc,QAAQ,GACtBR,gBAAiBN,EAAMO,QAAQY,UAAUC,MAE3C+F,KAAM,CACJtG,OAAQb,EAAMc,QAAQ,IAExBsF,MAAO,CACL,QAAS,CACPvF,OAAQb,EAAMc,QAAQ,GACtBsE,MAAO,aAME,SAASuF,KACtB,IAAMrJ,EAAUxB,KADmB,EAOjByB,IAAM+E,SAAS,GAPE,mBAO5BL,EAP4B,KAOzBM,EAPyB,OAQjBhF,IAAM+E,SAAS,GARE,mBAQ5BJ,EAR4B,KAQzBM,EARyB,OASjBjF,IAAM+E,SAAS,KATE,mBAS5BiC,EAT4B,KASzBqC,EATyB,OAUjBrJ,IAAM+E,SAAS,IAVE,mBAU5BsD,EAV4B,KAUzBiB,EAVyB,OAWjBtJ,IAAM+E,SAAS,IAXE,mBAW5BwE,EAX4B,KAWzBC,EAXyB,OAYjBxJ,IAAM+E,SAAS,IAZE,mBAY5BiD,EAZ4B,KAYzByB,EAZyB,OAajBzJ,IAAM+E,SAAS,KAbE,mBAa5BuD,EAb4B,KAazBoB,EAbyB,KAqBnC1J,IAAMC,WAAU,WACdC,OAAOC,SAAS,EAAG,KAClB,IAvBgC,MA6DbH,IAAM+E,UAAS,GA7DF,mBA6D5BqD,EA7D4B,KA6DvBuB,EA7DuB,OA8DG3J,IAAM+E,UAAS,GA9DlB,mBA8D5B+D,EA9D4B,KA8DfC,EA9De,KAoEnC,OACE,kBAAC7D,EAAA,EAAD,CAAW5E,UAAU,OAAO6E,SAAS,KAAK5E,UAAWR,EAAQrB,MAC3D,kBAAC8B,EAAA,EAAD,MACA,kBAACJ,EAAA,EAAD,CAAMW,MAAI,EAACT,UAAWa,IAAOC,UAAW,EAAGC,QAAM,GAC/C,yBAAKd,UAAWR,EAAQV,OACtB,kBAACkC,EAAA,EAAD,CAAQhB,UAAWR,EAAQJ,QACzB,kBAAC,IAAD,OAEF,kBAACxB,EAAA,EAAD,CAAYmC,UAAU,KAAKlC,QAAQ,MACjC,kBAACoD,EAAA,EAAD,CAAKC,WAAY,GAAjB,sDAIF,kBAACtD,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAG2D,EA/EZ,EA+E0B5B,GA9EvB,EA8EyCC,GA7EtC,GA6Ed,0TAKE,+BAGJ,kBAACjC,EAAA,EAAD,KACE,8BAEE,kBAACpB,EAAA,EAAD,CAAMG,UAAWR,EAAQV,OAAzB,mLAKJ,kBAACmC,EAAA,EAAD,KACE,8BAGF,0BAAM8D,aAAa,MAAM/E,UAAWR,EAAQ8E,OAC1C,kBAACU,EAAA,EAAD,CAAWC,GAAG,QAAQC,aAAcJ,SAASX,GAAIzF,KAAK,SAAS2D,MAAM,YAAYX,SAnE3F,SAAuByD,GACrBV,EAAKU,EAAEC,OAAO9C,UAmEN,kBAAC0C,EAAA,EAAD,CAAWC,GAAG,SAASC,aAAcJ,SAASV,GAAI1F,KAAK,SAAS2D,MAAM,aAAaX,SAjE7F,SAAuByD,GACrBT,EAAKS,EAAEC,OAAO9C,WAkER,kBAACrB,EAAA,EAAD,KACE,8BAIF,kBAAC,GAAD,CAAckD,EAAGW,SAASX,GAAIC,EAAGU,SAASV,KAG1C,kBAACxG,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EAhHb,EAgH2B5B,GA/GxB,EA+G0CC,GA9GvC,GA+GZ,6BACA,uDA5FZ,SAAgBiB,EAAGC,GAGjB,OAAS,GAALD,GAAe,GAALC,EACL,kBACEU,SAASX,GAAKW,SAASV,GACzB,KAAQ,GAAMoB,WAAa,YAAc,GAAMA,WAAa,UAE9D,MAAQrB,EAAEC,GAAGoB,WAAWC,UAAU,EAP5B,GAOyC,YAAe,EAAEtB,EAAEC,GAAIoB,WAAWC,UAAU,EAPrF,GAOkG,UAsFpGC,CAAOvB,EAAGC,IAEX,+BAMJ,0BAAMW,aAAa,MAAM/E,UAAWR,EAAQ8E,OAC1C,kBAACU,EAAA,EAAD,CAAWC,GAAG,aAAaC,aAAcJ,SAAS2B,GAAI/H,KAAK,SAAS2D,MAAM,iBAAiBX,SAtFrG,SAAuByD,GACrB2D,EAAK3D,EAAEC,OAAO9C,UAsFN,kBAAC0C,EAAA,EAAD,CAAWC,GAAG,eAAeC,aAAcJ,SAAS2C,GAAI/I,KAAK,SAAS2D,MAAM,oBAAoBX,SA1E1G,SAAuByD,GACrB+D,EAAK/D,EAAEC,OAAO9C,UA0EN,kBAAC0C,EAAA,EAAD,CAAWC,GAAG,SAASC,aAAcJ,SAASiD,GAAIrJ,KAAK,SAAS2D,MAAM,kBAAkBX,SAxElG,SAAuByD,GACrBgE,EAAKhE,EAAEC,OAAO9C,WAyER,0BAAMyC,aAAa,MAAM/E,UAAWR,EAAQ8E,OAC1C,kBAACU,EAAA,EAAD,CAAWC,GAAG,QAAQC,aAAc0D,WAAWd,GAAIpJ,KAAK,SAAS2D,MAAM,iBAAiBX,SAxFlG,SAAuByD,GACjByD,WAAWzD,EAAEC,OAAO9C,QAAU,GAChC+G,MAAM,6CAERN,EAAK5D,EAAEC,OAAO9C,OACd2G,EAAK,EAAI9D,EAAEC,OAAO9C,UAoFV,kBAAC0C,EAAA,EAAD,CAAWsE,UAAQ,EAACrE,GAAG,QAAQ3C,MAAOsG,WAAWI,GAAInL,QAAQ,SAASwE,MAAM,gBAE9E,kBAACpB,EAAA,EAAD,KACE,8BAIF,kBAACwH,GAAA,EAAD,CACEC,QACE,kBAACnH,EAAA,EAAD,CAAQ1D,QAAQ,WAAWC,MAAM,UAAU6K,QAhFvD,WACES,GAAQvB,GACRW,GAAe,KA8EL,oBAKJ,kBAACvH,EAAA,EAAD,KACE,6BACA,8BAGF,kBAACpB,EAAA,EAAD,KACI0I,EACF,kBAAC1I,EAAA,EAAD,CAAMG,UAAWR,EAAQV,OACvB,kBAAC,GAAD,CAAqBqF,EAAGW,SAASX,GAAIC,EAAGU,SAASV,GAAIqC,EAAG3B,SAAS2B,GAAIqB,EAAGc,WAAWd,GAAIL,EAAG3C,SAAS2C,GAAIM,EAAGjD,SAASiD,GAAIF,IAAKA,IAC5H,kBAACjK,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EA3JjB,EA2J+B5B,GA1J5B,EA0J8CC,GAzJ3C,GA0JR,6BADF,oRAKE,gCAIJ,MAQJ,kBAAC,EAAD,CAAYH,WAAY,yCAA0CD,QAAS,gBAAiBE,OAhKpG,SAAgBpB,GACd,IACIC,EADalC,OAAOmC,SAASC,SACXC,OAAO,KAAOJ,GACpCjC,OAAOmC,SAASG,KAAOJ,QClDpB,IAuEQ0H,GAvEf,YACI,WAAY3G,GAAQ,qEACZA,IAFZ,sEAMM,OACE,kBAAC/C,EAAA,EAAD,KACA,kBAACwD,EAAA,EAAD,CAAgBtD,UAAWa,IAAOS,MAAO,CAAEiC,MAAO,QAAUC,GAAI,GAC9D,kBAACC,EAAA,EAAD,CAAQhC,KAAK,QAAQiC,aAAW,iBAC9B,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,UACA,kBAACA,EAAA,EAAD,CAAW7F,MAAM,SAAQ,oCACzB,kBAAC6F,EAAA,EAAD,CAAW7F,MAAM,SAAQ,oCACzB,kBAAC6F,EAAA,EAAD,CAAW7F,MAAM,SAAQ,sCAG7B,kBAAC8F,EAAA,EAAD,KACE,kBAACF,EAAA,EAAD,CAAUG,IAAI,QACZ,kBAACF,EAAA,EAAD,CAAW7D,UAAU,KAAKgE,MAAM,OAC9B,oCAEF,kBAACC,EAAA,EAAD,CAASC,MAAM,wIAAwIC,OAAK,GAC1J,kBAACN,EAAA,EAAD,CAAW7F,MAAM,UAAU8E,KAAKD,MAAMuB,EAAEtB,KAAKD,MAAMwB,GAAG,IAExD,kBAACJ,EAAA,EAAD,CAASC,MAAM,mHAAmHC,OAAK,GACrI,kBAACN,EAAA,EAAD,CAAW7F,MAAM,SAAS8E,KAAKD,MAAMuB,IAEvC,kBAACH,EAAA,EAAD,CAASC,MAAM,mHAAmHC,OAAK,GACrI,kBAACN,EAAA,EAAD,CAAW7F,MAAM,SAAS8E,KAAKD,MAAMuB,KAGzC,kBAACR,EAAA,EAAD,CAAUG,IAAI,QACZ,kBAACF,EAAA,EAAD,CAAW7D,UAAU,KAAKgE,MAAM,OAC9B,oCAEF,kBAACC,EAAA,EAAD,CAASC,MAAM,oFAAoFC,OAAK,GACtG,kBAACN,EAAA,EAAD,CAAW7F,MAAM,SAAS,EAAI8E,KAAKD,MAAM4G,IAE3C,kBAACxF,EAAA,EAAD,CAASC,MAAM,yFAAyFC,OAAK,GAC3G,kBAACN,EAAA,EAAD,CAAW7F,MAAM,UAAU8E,KAAKD,MAAMuB,EAAEtB,KAAKD,MAAM4G,GAAG,IAExD,kBAACxF,EAAA,EAAD,CAASC,MAAM,mHAAmHC,OAAK,GACrI,kBAACN,EAAA,EAAD,CAAW7F,MAAM,SAAS8E,KAAKD,MAAMuB,KAIzC,kBAACR,EAAA,EAAD,CAAUG,IAAI,QACZ,kBAACF,EAAA,EAAD,CAAW7D,UAAU,KAAKgE,MAAM,OAC9B,oCAEF,kBAACC,EAAA,EAAD,CAASC,MAAM,6GAA6GC,OAAK,GAC/H,kBAACN,EAAA,EAAD,CAAW7F,MAAM,SAAjB,MAEF,kBAACiG,EAAA,EAAD,CAASC,MAAM,6GAA6GC,OAAK,GAC/H,kBAACN,EAAA,EAAD,CAAW7F,MAAM,SAAjB,MAEF,kBAACiG,EAAA,EAAD,CAASC,MAAM,iEAAiEC,OAAK,GACnF,kBAACN,EAAA,EAAD,CAAW7F,MAAM,SAAS8E,KAAKD,MAAMuB,EAAE,aA3DzD,GAAoC1E,IAAM0D,WCGpCnF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,OAAQ,SAEVU,MAAO,CACLC,OAAQb,EAAMc,QAAQ,GACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZkF,eAAgB,UAElBjF,OAAQ,CACNL,OAAQb,EAAMc,QAAQ,GACtBR,gBAAiBN,EAAMO,QAAQY,UAAUC,MAE3CgF,MAAO,CACL,QAAS,CACPvF,OAAQb,EAAMc,QAAQ,GACtBsE,MAAO,aAQE,SAASmG,KACtB,IAAMjK,EAAUxB,KADqB,EAOnByB,IAAM+E,SAAS,KAPI,mBAO9BL,EAP8B,KAO3BM,EAP2B,OAQnBhF,IAAM+E,SAAS,GARI,mBAQ9BJ,EAR8B,KAQ3BM,EAR2B,OASnBjF,IAAM+E,SAAS,GATI,mBAS9BgF,EAT8B,KAS3BE,EAT2B,KA+BrC,OAdAjK,IAAMC,WAAU,WACdC,OAAOC,SAAS,EAAG,KAClB,IAaD,kBAAC+E,EAAA,EAAD,CAAW5E,UAAU,OAAO6E,SAAS,KAAK5E,UAAWR,EAAQrB,MAC3D,kBAAC8B,EAAA,EAAD,MACA,kBAACc,EAAA,EAAD,CAAMX,IAAI,EAAMG,QAAS,MACvB,kBAACV,EAAA,EAAD,CAAMW,MAAI,EAACT,UAAWa,IAAOC,UAAW,EAAGC,QAAM,GAC/C,yBAAKd,UAAWR,EAAQV,OACtB,kBAACkC,EAAA,EAAD,CAAQhB,UAAWR,EAAQJ,QACzB,kBAAC,IAAD,OAEF,kBAACxB,EAAA,EAAD,CAAYmC,UAAU,KAAKlC,QAAQ,MACjC,kBAACoD,EAAA,EAAD,CAAKC,WAAY,GAAjB,2BAIF,kBAACtD,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAG2D,EA3Cd,EA2C4B5B,GA1CzB,EA0C2CC,GAzCxC,GAyCZ,iNAGgD,gCAHhD,KAKA,kBAACjC,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EAhDf,EAgD6B5B,GA/C1B,EA+C4CC,GA9CzC,GA+CV,6BADF,+iBASE,6BACA,+BAIJ,kBAAC,GAAD,CAAgBiB,EAAGW,SAASX,GAAIC,EAAGU,SAASV,GAAIoF,EAAG1E,SAAS0E,KAE5D,kBAAC5L,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EAjEf,EAiE6B5B,GAhE1B,EAgE4CC,GA/DzC,GAgEV,6BADF,kaAOE,+BAKJ,0BAAM6B,aAAa,MAAM/E,UAAWR,EAAQ8E,OAC1C,kBAACU,EAAA,EAAD,CAAWC,GAAG,QAAQC,aAAcJ,SAASX,GAAIzF,KAAK,SAAS2D,MAAM,QAAQX,SA5DzF,SAAuByD,GACrBV,EAAKU,EAAEC,OAAO9C,UA4DJ,kBAAC0C,EAAA,EAAD,CAAWC,GAAG,SAASC,aAAcJ,SAASV,GAAI1F,KAAK,SAAS2D,MAAM,SAASX,SA1D3F,SAAuByD,GACrBT,EAAKS,EAAEC,OAAO9C,UA0DJ,kBAAC0C,EAAA,EAAD,CAAWC,GAAG,OAAOC,aAAcJ,SAAS0E,GAAI9K,KAAK,SAAS2D,MAAM,OAAOX,SAxDvF,SAAuByD,GACrBuE,EAAKvE,EAAEC,OAAO9C,WA0DN,kBAAC1E,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EApFf,EAoF6B5B,GAnF1B,EAmF4CC,GAlFzC,GAmFV,6BADF,shBAQE,+BAIJ,kBAAC,EAAD,CAAYH,WAAY,wCAAyCD,QAAS,0BAA2BE,OAxF/G,SAAgBpB,GACd,IACIC,EADalC,OAAOmC,SAASC,SACXC,OAAO,KAAOJ,GACpCjC,OAAOmC,SAASG,KAAOJ,S,ICoDvB8D,GA/FEK,GACJ,WAAYC,EAAUC,GAAS,oBAC7BrD,KAAKoD,SAAWA,EAChBpD,KAAKqD,OAASA,GAKZC,GACJ,WAAYC,EAAOC,EAAMsD,EAAMrD,EAAMC,EAAWqD,EAAWC,GAAY,oBACrEhH,KAAKuD,MAAQA,EACbvD,KAAKwD,KAAOA,EACZxD,KAAK8G,KAAOA,EACZ9G,KAAKyD,KAAOA,EACZzD,KAAK0D,UAAYA,EACjB1D,KAAK+G,UAAYA,EACjB/G,KAAKgH,UAAYA,GAKjBrD,GAAuB,SAACC,EAAGqB,EAAGgC,GAChC,IACIpD,EADAC,EAAM,GAEV,IAAKD,EAAI,EAAGA,EAAIE,KAAKC,MAAMJ,EAAEqB,GAAIpB,IAC/BC,EAAID,GAAK,IAAIV,GAAK,EAAG,GAEvB,IAAKU,EAAIE,KAAKC,MAAMJ,EAAEqB,GAAIpB,EAAIE,KAAKC,MAAMJ,EAAEqB,GAAKlB,KAAKC,MAAMJ,EAAEqD,GAAIpD,IAC/DC,EAAID,GAAK,IAAIV,GAAK,EAAG,GAEvB,IAAKU,EAAIE,KAAKC,MAAMJ,EAAEqB,GAAKlB,KAAKC,MAAMJ,EAAEqD,GAAIpD,EAAID,EAAGC,IACjDC,EAAID,GAAK,IAAIV,GAAK,EAAG,GAEvB,OAAOW,GAILG,GAAkB,SAAC3C,EAAGqF,EAAGpF,EAAG2C,EAAQC,GACtC,OAAuB,GAAnBD,EAAOd,UAAsC,GAArBe,EAASf,UAC3B9B,EAAEC,GAAG,EACe,GAAnB2C,EAAOd,UAAsC,GAArBe,EAASf,UAEd,GAAnBc,EAAOd,UAAsC,GAArBe,EAASf,SADnC9B,EAGqB,GAAnB4C,EAAOd,UAAsC,GAArBe,EAASf,UAClCuD,EACoB,GAAnBzC,EAAOd,UAAsC,GAArBe,EAASf,UAClC9B,EAAEqF,GAAG,EACe,GAAnBzC,EAAOd,UAAsC,GAArBe,EAASf,SACnC9B,EACqB,GAAnB4C,EAAOd,UAAsC,GAArBe,EAASf,UAEd,GAAnBc,EAAOd,UAAsC,GAArBe,EAASf,SADnC,EAIA9B,EAAE,GAIT8C,GAAgB,SAACC,EAAK/C,EAAGqF,EAAGpF,GAAO,IAAD,uBACpC,YAAgB+C,MAAMD,EAAIE,QAAQC,OAAlC,+CAA0C,CAAC,IACrCC,EAAOJ,EAD6B,SAElCF,EAAWE,EAAIN,KAAKC,MAAMD,KAAKW,SAAWX,KAAKC,MAAMK,EAAIE,UAC/DE,EAAKpB,OAASY,GAAgB3C,EAAGqF,EAAGpF,EAAGkD,EAAMN,IAJX,oFAQlCQ,GAAmB,SAACN,EAAKO,GAAO,IAAD,uBACjC,YAAgBN,MAAMM,GAAGJ,OAAzB,+CAAiC,SAAC,IAC5BC,EAAOJ,EAAIN,KAAKC,MAAMD,KAAKW,SAAWX,KAAKC,MAAMK,EAAIE,UACnDM,EAAYR,EAAIN,KAAKC,MAAMD,KAAKW,SAAWX,KAAKC,MAAMK,EAAIE,UAC5DM,EAAUxB,OAASoB,EAAKpB,SAC1BoB,EAAKrB,SAAWyB,EAAUzB,WALG,oFAU/B0B,GAAkB,SAAChC,GACrB,IAAIU,EAAO,EACPsD,EAAO,EACPrD,EAAO,EAHyB,uBAIpC,YAAgBa,MAAMxB,EAAWyB,QAAQC,OAAzC,+CAAiD,CAAC,IAC1CC,EAAO3B,EADkC,SAE1B,GAAjB2B,EAAKrB,SACPI,GAAQ,EACkB,GAAjBiB,EAAKrB,SACd0D,GAAQ,EAERrD,GAAQ,GAXwB,kFAcpC,MAAO,CAACD,EAAMsD,EAAMrD,EAAOD,EAAOV,EAAWyB,OAAUuC,EAAOhE,EAAWyB,OAAUd,EAAOX,EAAWyB,SAGnGrB,GAAW,GA6EAgE,GA1Ef,YAEE,WAAYnH,GAAQ,IAAD,uBACjB,4CAAMA,KACDiD,MAAQ,CACXgC,IAAK,EAAKjF,MAAMiF,KAElBlC,GAAaa,GAAqB,EAAK5D,MAAM6D,EAAG,EAAK7D,MAAMkF,EAAG,EAAKlF,MAAMkH,GACzE/D,GAAW,GANM,2BAQjB,YAAgBoB,MAAM,EAAKvE,MAAMmF,GAAGV,OAApC,+CAA4C,CAAC,IAAlCX,EAAiC,UACgBiB,GAAgBhC,IADhC,mBACrCU,EADqC,KAC/BsD,EAD+B,KACzBrD,EADyB,KACnBC,EADmB,KACRqD,EADQ,KACGC,EADH,KAEtC7B,EAAI,IAAI7B,GAAqBO,EAAGL,EAAMsD,EAAMrD,EAAMC,EAAWqD,EAAWC,GAC5E3B,QAAQC,IAAIH,GACZjC,GAASkC,KAAKD,GACdf,GAActB,GAAY,EAAK/C,MAAMuB,EAAG,EAAKvB,MAAM4G,EAAG,EAAK5G,MAAMwB,GACjEoD,GAAiB7B,GAAY,EAAK/C,MAAM6E,IAdzB,2FAFrB,kFAqBIS,QAAQC,IAAItF,KAAKD,MAAMkF,GACvBnC,GAAaa,GAAqB3D,KAAKD,MAAM6D,EAAG5D,KAAKD,MAAMkF,EAAGjF,KAAKD,MAAMkH,GACzE/D,GAAW,GAHQ,2BAKnB,YAAgBoB,MAAMtE,KAAKD,MAAMmF,GAAGV,OAApC,+CAA4C,CAAC,IAAlCX,EAAiC,UACgBiB,GAAgBhC,IADhC,mBACrCU,EADqC,KAC/BsD,EAD+B,KACzBrD,EADyB,KACnBC,EADmB,KACRqD,EADQ,KACGC,EADH,KAEtC7B,EAAI,IAAI7B,GAAqBO,EAAGL,EAAMsD,EAAMrD,EAAMC,EAAWqD,EAAWC,GAC5E3B,QAAQC,IAAIH,GACZjC,GAASkC,KAAKD,GACdf,GAActB,GAAY9C,KAAKD,MAAMuB,EAAGtB,KAAKD,MAAM4G,EAAG3G,KAAKD,MAAMwB,GACjEoD,GAAiB7B,GAAY9C,KAAKD,MAAM6E,IAXvB,qFApBvB,+BAqCI,OACE,kBAAC5H,EAAA,EAAD,KACE,kBAACwD,EAAA,EAAD,CAAgBtD,UAAWa,KACzB,kBAAC4C,EAAA,EAAD,CAAOhC,KAAK,QAAQiC,aAAW,gBAC/B,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAW,qCACX,kBAACA,EAAA,EAAD,CAAW7F,MAAM,SAAQ,qCACzB,kBAAC6F,EAAA,EAAD,CAAW7F,MAAM,SAAQ,qCACzB,kBAAC6F,EAAA,EAAD,CAAW7F,MAAM,SAAQ,qCACzB,kBAAC6F,EAAA,EAAD,CAAW7F,MAAM,SAAQ,+CACzB,kBAAC6F,EAAA,EAAD,CAAW7F,MAAM,SAAQ,+CACzB,kBAAC6F,EAAA,EAAD,CAAW7F,MAAM,SAAQ,iDAG7B,kBAAC8F,EAAA,EAAD,KACGkC,GAASqC,KAAI,SAACC,GAAD,OACZ,kBAAC1E,EAAA,EAAD,CAAUG,IAAK,QAAUuE,EAAIjC,OAC3B,kBAACxC,EAAA,EAAD,CAAW7D,UAAU,KAAKgE,MAAM,OAC7BsE,EAAIjC,OAEP,kBAACxC,EAAA,EAAD,CAAW7F,MAAM,SAASsK,EAAIhC,MAC9B,kBAACzC,EAAA,EAAD,CAAW7F,MAAM,SAASsK,EAAIsB,MAC9B,kBAAC/F,EAAA,EAAD,CAAW7F,MAAM,SAASsK,EAAI/B,MAC9B,kBAAC1C,EAAA,EAAD,CAAW7F,MAAM,SAASsK,EAAI9B,WAC9B,kBAAC3C,EAAA,EAAD,CAAW7F,MAAM,SAASsK,EAAIuB,WAC9B,kBAAChG,EAAA,EAAD,CAAW7F,MAAM,SAASsK,EAAIwB,uBA/DhD,GAA2CpK,IAAM0D,WC5F3CnF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,OAAQ,SAEVU,MAAO,CACLC,OAAQb,EAAMc,QAAQ,GACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZkF,eAAgB,UAElBjF,OAAQ,CACNL,OAAQb,EAAMc,QAAQ,GACtBR,gBAAiBN,EAAMO,QAAQY,UAAUC,MAE3C+F,KAAM,CACJtG,OAAQb,EAAMc,QAAQ,QAMX,SAASgL,KACtB,IAAMxK,EAAUxB,KADwB,EAOtByB,IAAM+E,SAAS,KAPO,mBAOjCL,EAPiC,aAQtB1E,IAAM+E,SAAS,IARO,mBAQjCJ,EARiC,aAStB3E,IAAM+E,SAAS,IATO,mBASjCgF,EATiC,aAUtB/J,IAAM+E,SAAS,MAVO,mBAUjCiC,EAViC,aAWtBhH,IAAM+E,SAAS,KAXO,mBAWjCsD,EAXiC,aAYtBrI,IAAM+E,SAAS,KAZO,mBAYjCsF,EAZiC,aAatBrK,IAAM+E,SAAS,MAbO,mBAajCiD,EAbiC,aActBhI,IAAM+E,SAAS,KAdO,mBAcjCuD,EAdiC,UAsBxCtI,IAAMC,WAAU,WACdC,OAAOC,SAAS,EAAG,KAClB,IAxBqC,MAmDFH,IAAM+E,UAAS,GAnDb,mBAmDjC+D,EAnDiC,KAmDpBC,EAnDoB,KAwDxC,OACE,kBAAC7D,EAAA,EAAD,CAAW5E,UAAU,OAAO6E,SAAS,KAAK5E,UAAWR,EAAQrB,MAC3D,kBAAC8B,EAAA,EAAD,MACA,kBAACJ,EAAA,EAAD,CAAMW,MAAI,EAACT,UAAWa,IAAOC,UAAW,EAAGC,QAAM,GAC/C,yBAAKd,UAAWR,EAAQV,OACtB,kBAACkC,EAAA,EAAD,CAAQhB,UAAWR,EAAQJ,QACzB,kBAAC,IAAD,OAEF,kBAACxB,EAAA,EAAD,CAAYmC,UAAU,KAAKlC,QAAQ,MACjC,kBAACoD,EAAA,EAAD,CAAKC,WAAY,GAAjB,2BAIF,kBAACtD,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAG2D,EAnEZ,EAmE0B5B,GAlEvB,EAkEyCC,GAjEtC,GAiEd,qDACoD,gCADpD,yCACkG,gCADlG,kGAGQ,gCAHR,gCAG6C,gCAH7C,yHAIkF,gCAJlF,8DAK8C,gCAL9C,uEAMa,gCANb,QAM0B,gCAN1B,yBAQA,kBAACjC,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EA3Eb,EA2E2B5B,GA1ExB,EA0E0CC,GAzEvC,GA0EZ,6BADF,+LAG0G,gCAH1G,kaAUA,kBAACjC,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EArFb,EAqF2B5B,GApFxB,EAoF0CC,GAnFvC,GAoFZ,6BADF,+BAE+BiB,EAF/B,SAEwCC,EAFxC,SAEiDoF,EAFjD,SAE0D/C,EAF1D,SAEmEqB,EAFnE,SAE4EgC,EAF5E,SAEqFrC,EAFrF,aAEkGM,EAFlG,wCAKF,kBAAC9G,EAAA,EAAD,KACE,8BAEF,kBAAC,GAAD,CAAgBkD,EAAGW,SAASX,GAAIC,EAAGU,SAASV,GAAIoF,EAAG1E,SAAS0E,KAE5D,kBAAC5L,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EAhGb,EAgG2B5B,GA/FxB,EA+F0CC,GA9FvC,GA+FZ,6BADF,iDAEiDuD,EAFjD,WAE4DA,EAAEqB,EAF9D,mCAEiGrB,EAAEqD,EAFnG,uCAGOrD,EAAIA,EAAEqB,EAAIrB,EAAEqD,EAHnB,qDAGwErC,EAHxE,6IAI2BM,EAJ3B,sOAOE,+BAGJ,kBAAC9G,EAAA,EAAD,KACE,8BAGF,kBAACwH,GAAA,EAAD,CACEC,QACE,kBAACnH,EAAA,EAAD,CAAQ1D,QAAQ,WAAWC,MAAM,UAAU6K,QA/DvD,WACEH,GAAe,KA8DL,oBAKJ,kBAACvH,EAAA,EAAD,KACE,8BAGF,kBAACpB,EAAA,EAAD,KACI0I,EAAe,kBAAC1I,EAAA,EAAD,CAAMG,UAAWR,EAAQV,OACxC,kBAAC,GAAD,CAAuBqF,EAAGW,SAASX,GAAIC,EAAGU,SAASV,GAAIoF,EAAG1E,SAAS0E,GAAI/C,EAAG3B,SAAS2B,GAAIqB,EAAGc,WAAWd,GAAIgC,EAAGlB,WAAWkB,GAAIrC,EAAG3C,SAAS2C,GAAIM,EAAGjD,SAASiD,KACvJ,kBAACnK,EAAA,EAAD,CAAYmC,UAAU,KACxB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EA7Hb,EA6H2B5B,GA5HxB,EA4H0CC,GA3HvC,GA4HZ,6BADF,icAQE,gCAIC,MAML,kBAAC,EAAD,CAAYH,WAAY,sBAAuBD,QAAS,uBAAwBE,OAlIxF,SAAgBpB,GACd,IACIC,EADalC,OAAOmC,SAASC,SACXC,OAAO,KAAOJ,GACpCjC,OAAOmC,SAASG,KAAOJ,QCxC3B,IAAM7D,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,OAAQ,SAEVU,MAAO,CACLC,OAAQb,EAAMc,QAAQ,GACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZkF,eAAgB,UAElBjF,OAAQ,CACNL,OAAQb,EAAMc,QAAQ,GACtBR,gBAAiBN,EAAMO,QAAQY,UAAUC,MAE3CgF,MAAO,CACL,QAAS,CACPvF,OAAQb,EAAMc,QAAQ,GACtBsE,MAAO,aAOE,SAAS2G,KACtB,IAAMzK,EAAUxB,KAD4B,EAO1ByB,IAAM+E,SAAS,GAPW,mBAOrCL,EAPqC,KAOlCM,EAPkC,OAQ1BhF,IAAM+E,SAAS,GARW,mBAQrCJ,EARqC,KAQlCM,EARkC,OAS1BjF,IAAM+E,SAAS,GATW,mBASrCgF,EATqC,KASlCE,EATkC,OAU1BjK,IAAM+E,SAAS,KAVW,mBAUrCiC,EAVqC,KAUlCqC,EAVkC,OAW1BrJ,IAAM+E,SAAS,IAXW,mBAWrCsD,EAXqC,KAWlCiB,EAXkC,OAY1BtJ,IAAM+E,SAAS,IAZW,mBAYrCsF,EAZqC,KAYlCI,EAZkC,OAa1BzK,IAAM+E,SAAS,IAbW,mBAarCwE,EAbqC,KAalCC,EAbkC,OAc1BxJ,IAAM+E,SAAS,IAdW,mBAcrCiD,EAdqC,KAclCyB,EAdkC,OAe1BzJ,IAAM+E,SAAS,KAfW,mBAerCuD,EAfqC,KAelCoB,EAfkC,KAuB5C1J,IAAMC,WAAU,WACdC,OAAOC,SAAS,EAAG,KAClB,IAzByC,MA4DtBH,IAAM+E,UAAS,GA5DO,mBA4DrCqD,EA5DqC,KA4DhCuB,EA5DgC,QA6DN3J,IAAM+E,UAAS,GA7DT,qBA6DrC+D,GA7DqC,MA6DxBC,GA7DwB,MAmE5C,OACE,kBAAC7D,EAAA,EAAD,CAAW5E,UAAU,OAAO6E,SAAS,KAAK5E,UAAWR,EAAQrB,MAC3D,kBAAC8B,EAAA,EAAD,MACA,kBAACJ,EAAA,EAAD,CAAMW,MAAI,EAACT,UAAWa,IAAOC,UAAW,EAAGC,QAAM,GAC/C,yBAAKd,UAAWR,EAAQV,OACtB,kBAACkC,EAAA,EAAD,CAAQhB,UAAWR,EAAQJ,QACzB,kBAAC,IAAD,OAEF,kBAACxB,EAAA,EAAD,CAAYmC,UAAU,KAAKlC,QAAQ,MACjC,kBAACoD,EAAA,EAAD,CAAKC,WAAY,GAAjB,2BAIF,kBAACtD,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAG2D,EA9EZ,EA8E0B5B,GA7EvB,EA6EyCC,GA5EtC,GA4Ed,4TAIF,kBAACjC,EAAA,EAAD,KACE,8BAEE,kBAACpB,EAAA,EAAD,CAAMG,UAAWR,EAAQV,OAAzB,mLAKJ,kBAACmC,EAAA,EAAD,KACE,8BAEF,0BAAM8D,aAAa,MAAM/E,UAAWR,EAAQ8E,OACxC,kBAACU,EAAA,EAAD,CAAWC,GAAG,QAAQC,aAAcJ,SAASX,GAAIzF,KAAK,SAAS2D,MAAM,YAAYX,SAtE7F,SAAuByD,GACrBV,EAAKU,EAAEC,OAAO9C,UAsEJ,kBAAC0C,EAAA,EAAD,CAAWC,GAAG,SAASC,aAAcJ,SAASV,GAAI1F,KAAK,SAAS2D,MAAM,aAAaX,SApE/F,SAAuByD,GACrBT,EAAKS,EAAEC,OAAO9C,UAoEJ,kBAAC0C,EAAA,EAAD,CAAWC,GAAG,OAAOC,aAAcJ,SAAS0E,GAAI9K,KAAK,SAAS2D,MAAM,WAAWX,SAlE3F,SAAuByD,GACrBuE,EAAKvE,EAAEC,OAAO9C,WAmER,kBAACrB,EAAA,EAAD,KACE,8BAIF,kBAAC,GAAD,CAAgBkD,EAAGW,SAASX,GAAIC,EAAGU,SAASV,GAAIoF,EAAG1E,SAAS0E,KAE5D,kBAACvI,EAAA,EAAD,KACE,8BAGF,0BAAM8D,aAAa,MAAM/E,UAAWR,EAAQ8E,OAC1C,kBAACU,EAAA,EAAD,CAAWC,GAAG,aAAaC,aAAcJ,SAAS2B,GAAI/H,KAAK,SAAS2D,MAAM,iBAAiBX,SA7ErG,SAAuByD,GACrB2D,EAAK3D,EAAEC,OAAO9C,UA6EN,kBAAC0C,EAAA,EAAD,CAAWC,GAAG,eAAeC,aAAcJ,SAAS2C,GAAI/I,KAAK,SAAS2D,MAAM,oBAAoBX,SA7D1G,SAAuByD,GACrB+D,EAAK/D,EAAEC,OAAO9C,UA6DN,kBAAC0C,EAAA,EAAD,CAAWC,GAAG,SAASC,aAAcJ,SAASiD,GAAIrJ,KAAK,SAAS2D,MAAM,kBAAkBX,SA3DlG,SAAuByD,GACrBgE,EAAKhE,EAAEC,OAAO9C,WA4DR,0BAAMyC,aAAa,MAAM/E,UAAWR,EAAQ8E,OAC1C,kBAACU,EAAA,EAAD,CAAWC,GAAG,QAAQC,aAAc0D,WAAWd,GAAIpJ,KAAK,SAAS2D,MAAM,iBAAiBX,SA/ElG,SAAuByD,GAChBA,EAAEC,OAAO9C,MAAQwH,EAAK,GACzBT,MAAM,uDAERN,EAAK5D,EAAEC,OAAO9C,OACd2G,EAAK,EAAI9D,EAAEC,OAAO9C,MAAQwH,MA2ElB,kBAAC9E,EAAA,EAAD,CAAWC,GAAG,QAAQC,aAAc0D,WAAWkB,GAAIpL,KAAK,SAAS2D,MAAM,iBAAiBX,SAzElG,SAAuByD,GAChBA,EAAEC,OAAO9C,MAAQwF,EAAK,GACzBuB,MAAM,uDAERa,EAAK/E,EAAEC,OAAO9C,OACd2G,EAAK,EAAI9D,EAAEC,OAAO9C,MAAQwF,MAqElB,kBAAC9C,EAAA,EAAD,CAAWsE,UAAQ,EAACrE,GAAG,QAAQ3C,MAAOsG,WAAWI,GAAGxD,WAAWC,UAAU,EAAG,GAAI5H,QAAQ,SAASwE,MAAM,gBAEzG,kBAACpB,EAAA,EAAD,KACE,8BAGF,kBAACwH,GAAA,EAAD,CACEC,QACE,kBAACnH,EAAA,EAAD,CAAQ1D,QAAQ,WAAWC,MAAM,UAAU6K,QAlEvD,WACES,GAAQvB,GACRW,IAAe,KAgEL,oBAKJ,kBAACvH,EAAA,EAAD,KACE,6BACA,8BAGF,kBAACpB,EAAA,EAAD,KACI0I,GAAc,kBAAC1I,EAAA,EAAD,CAAMG,UAAWR,EAAQV,OACzC,kBAAC,GAAD,CAAuBqF,EAAGW,SAASX,GAAIC,EAAGU,SAASV,GAAIoF,EAAG1E,SAAS0E,GAAI/C,EAAG3B,SAAS2B,GAAIqB,EAAGc,WAAWd,GAAIgC,EAAGlB,WAAWkB,GAAIrC,EAAG3C,SAAS2C,GAAIM,EAAGjD,SAASiD,GAAIF,IAAKA,IAC9J,kBAACjK,EAAA,EAAD,CAAYmC,UAAU,KACxB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,EAAI2D,EA3Ib,EA2I2B5B,GA1IxB,EA0I0CC,GAzIvC,GA0IZ,6BADF,wCAIE,gCAIC,MAQL,kBAAC,EAAD,CAAYH,WAAY,aAAcD,QAAS,cAAeE,OA7ItE,SAAgBpB,GACd,IACIC,EADalC,OAAOmC,SAASC,SACXC,OAAO,KAAOJ,GACpCjC,OAAOmC,SAASG,KAAOJ,QCnC3B,SAASlE,KACP,OACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,UAAxD,8BAEE,6BAFF,qBASJ,IAAMC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,OAAQ,SAEVC,MAAO,CACLC,gBAAiB,8IACjBC,iBAAkB,YAClBC,gBACyB,UAAvBN,EAAMO,QAAQC,KAAmBR,EAAMO,QAAQE,KAAK,IAAMT,EAAMO,QAAQE,KAAK,KAC/EC,eAAgB,QAChBC,mBAAoB,UAEtBC,MAAO,CACLC,OAAQb,EAAMc,QAAQ,EAAG,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNL,OAAQb,EAAMc,QAAQ,GACtBR,gBAAiBN,EAAMO,QAAQY,UAAUC,MAE3C6K,KAAM,CACJ7G,MAAO,OACP8G,UAAWlM,EAAMc,QAAQ,IAE3BqL,OAAQ,CACNtL,OAAQb,EAAMc,QAAQ,EAAG,EAAG,QAIjB,SAASsL,KACtB,IAAM9K,EAAUxB,KAMhB,OAJAyB,IAAMC,WAAU,WACdC,OAAOC,SAAS,EAAG,KAClB,IAGD,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OAAOC,UAAWR,EAAQrB,MACpD,kBAAC8B,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAOC,UAAU,QAAQC,IAAI,EAAMC,cAAY,EAACC,eAAa,EAACC,QAAS,KACrE,kBAACV,EAAA,EAAD,CAAMW,MAAI,EAACC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAGX,UAAWR,EAAQnB,SAGzD,kBAAC6B,EAAA,EAAD,CAAOC,UAAU,OAAOC,IAAI,EAAMC,cAAY,EAACC,eAAa,EAACC,QAAS,KACtE,kBAACV,EAAA,EAAD,CAAMW,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGZ,UAAWa,IAAOC,UAAW,EAAGC,QAAM,GACrE,yBAAKd,UAAWR,EAAQV,OACtB,kBAACiC,EAAA,EAAD,CAAMX,IAAI,EAAMG,QAAS,MACvB,kBAACS,EAAA,EAAD,CAAQhB,UAAWR,EAAQJ,QACzB,kBAAC,IAAD,QAIJ,kBAAC2B,EAAA,EAAD,CAAMX,IAAI,EAAMG,QAAS,MAC3B,kBAAC3C,EAAA,EAAD,CAAYmC,UAAU,KACpB,kBAACkB,EAAA,EAAD,CAAKC,WAAY,GAAjB,0NAKA,kBAACD,EAAA,EAAD,KACE,8BAEF,kBAACA,EAAA,EAAD,CAAKC,WAAY,GAAjB,oZAQA,kBAACD,EAAA,EAAD,KACE,8BAEF,kBAACA,EAAA,EAAD,CAAKC,WAAY,GAAjB,saAOA,kBAACD,EAAA,EAAD,KACE,8BAEF,kBAACA,EAAA,EAAD,CAAKC,WAAY,GAAjB,kKAQA,kBAACD,EAAA,EAAD,KACE,8BAGF,kBAACA,EAAA,EAAD,KACE,kBAACF,EAAA,EAAD,CAAMX,IAAI,EAAMG,QAAS,KACvB,uBAAG0B,KAAK,yDACN,kBAACV,EAAA,EAAD,CAAQgJ,WAAW,IAAnB,6BAON,kBAACtJ,EAAA,EAAD,KACE,8BAEF,kBAACA,EAAA,EAAD,KACE,8BAGF,kBAACF,EAAA,EAAD,CAAMX,IAAI,EAAMG,QAAS,KACzB,kBAACU,EAAA,EAAD,KACE,kBAACQ,EAAA,EAAD,CACEC,SAAU,SAACC,EAAOC,IAvI9B,SAAkBA,GAChB,IAEIC,EAFalC,OAAOmC,SAASC,SACRyI,QAAQ,aAAc,IAC5BxI,OAAO,KAAOJ,GACjCjC,OAAOmC,SAASG,KAAOJ,EAoIXK,CAASN,IAEXO,YAAU,GAER,kBAACC,EAAA,EAAD,CAAwBC,MAAM,0CAA0CC,MAAM,kBAAkBC,KAAM,kBAAC,IAAD,QACtG,kBAACH,EAAA,EAAD,CAAwBC,MAAM,0CAA0CC,MAAM,aAAaC,KAAM,kBAAC,IAAD,QACjG,kBAACH,EAAA,EAAD,CAAwBC,MAAM,2BAA2BC,MAAM,sBAAsBC,KAAM,kBAAC,IAAD,WAKjG,kBAACtB,EAAA,EAAD,KACE,8BAGF,kBAACF,EAAA,EAAD,CAAMX,IAAI,EAAMG,QAAS,KACrB,kBAACV,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMW,MAAI,EAACC,IAAE,GACX,kBAAC+B,EAAA,EAAD,CAAMP,KAAK,yCAAyCpE,QAAQ,SAA5D,mBAIF,kBAACgC,EAAA,EAAD,CAAMW,MAAI,GACR,kBAACgC,EAAA,EAAD,CAAMP,KAAK,qFAAqFpE,QAAQ,SACrG,2BAKX,kBAACkD,EAAA,EAAD,CAAMX,IAAI,EAAMG,QAAS,KACvB,kBAACU,EAAA,EAAD,CAAKgC,GAAI,GACP,kBAAC,GAAD,Y,kBC7IGwH,G,iLAvBT,OACE,kBAAC,IAAD,KACE,kBAACxK,EAAA,EAAD,MACA,6BACE,yBAAKD,UAAU,WACb,kBAAC,IAAD,CAAO0K,OAAK,EAACC,KAAM,CAAC,QAAS,KAAM5K,UAAWR,IAC9C,kBAAC,IAAD,CAAOoL,KAAK,YAAY5K,UAAWwE,KACnC,kBAAC,IAAD,CAAOoG,KAAK,sBAAsB5K,UAAa6K,KAC/C,kBAAC,IAAD,CAAOD,KAAK,mBAAmB5K,UAAauF,KAC5C,kBAAC,IAAD,CAAOqF,KAAK,OAAO5K,UAAauI,KAChC,kBAAC,IAAD,CAAOqC,KAAK,cAAc5K,UAAa8I,KACvC,kBAAC,IAAD,CAAO8B,KAAK,gBAAgB5K,UAAa0J,KACzC,kBAAC,IAAD,CAAOkB,KAAK,0BAA0B5K,UAAaiK,KACnD,kBAAC,IAAD,CAAOW,KAAK,uBAAuB5K,UAAakK,KAChD,kBAAC,IAAD,CAAOU,KAAK,cAAc5K,UAAauK,Y,GAhBnCnH,aClBlB0H,IAASC,OACP,kBAAC,GAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.e718bf87.chunk.js","sourcesContent":["import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fade from '@material-ui/core/Fade';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport SportsKabaddiIcon from '@material-ui/icons/SportsKabaddi';\nimport SportsHandballIcon from '@material-ui/icons/SportsHandball';\nimport AccessibilityNewIcon from '@material-ui/icons/AccessibilityNew';\nimport Slide from '@material-ui/core/Slide';\nimport { NavLink } from \"react-router-dom\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      The University of Hong Kong \n      <br />\n      Released May 2020\n    </Typography>\n  );\n}\n\n\nfunction setValue(newValue) {\n  var currentURL = window.location.pathname;\n  var goto = currentURL.concat(\"#/\" + newValue);\n  window.location.href = goto;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://images.unsplash.com/photo-1575477493388-c3ccb0a00868?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(4, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(0),\n    backgroundColor: theme.palette.secondary.main,\n  },\n\n}));\n\n\nexport default function Introduction() {\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Slide direction=\"right\" in={true} mountOnEnter unmountOnExit timeout={1000}>\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      </Slide>\n\n      <Slide direction=\"left\" in={true} mountOnEnter unmountOnExit timeout={1000}>\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Fade in={true} timeout={2500}>\n            <Avatar className={classes.avatar}>\n              <PetsIcon />\n            </Avatar>\n          </Fade>\n\n          <Fade in={true} timeout={2500}>\n            <Typography component=\"h1\" variant=\"h5\" >\n              <Box lineHeight={2}>\n                Evolutionary Game Theory\n              </Box>\n            </Typography>\n          </Fade>\n\n          <Fade in={true} timeout={2500}>\n            <Typography component=\"p\">\n              <Box lineHeight={2}>\n                Have you ever watched a nature documentary and thought to yourself, why don't animals\n                simply share food with one another? Or alternatively, why don't they completely eliminate\n                their enemies to prevent future conflict? \n              </Box>\n\n              <Box>\n                <br />\n              </Box>\n              <Box lineHeight={2}>\n                When animals fight, be it over foods or mates, we usually see a lot of posturing and mock \n                fighting that only moderately injures the participants. How do animals know when to stop\n                fighting? And, what drives this behavior?\n              </Box>\n              <Box>\n                <br />\n              </Box>\n              <Box lineHeight={2}>\n                Part of the answer lies in something called <b>Evolutionary Stable Strategies</b>. Let us\n                take a close look at what exactly this is, and how it plays out in the world around us.\n              </Box>\n            </Typography>\n          </Fade>\n\n          <Box>\n            <br />\n          </Box>\n\n          <Box fullWidth={true}>\n            <Fade in={true} timeout={3000}>\n              <NavLink to=\"/hawkdove\" style={{ textDecoration: 'none' }}>\n                <Button size=\"large\" fullWidth={true} variant=\"contained\" color=\"primary\">\n                  Begin\n                </Button>\n              </NavLink>\n            </Fade>\n          </Box>\n\n          <Box>\n            <br />\n          </Box>\n          <Box>\n            <br />\n          </Box>\n\n          <Fade in={true} timeout={3000}>\n          <Grid container className={classes.paper}>\n            <Grid>\n                  Skip ahead to the tools here!\n                  <br />\n            </Grid>\n            <BottomNavigation\n              onChange={(event, newValue) => {\n                setValue(newValue);\n              }}\n              showLabels\n            >\n              <BottomNavigationAction label=\"Evolutionary Stable Strategy Calculator\" value=\"hawkdovesandbox\" icon={<AccessibilityNewIcon />} />\n              <BottomNavigationAction label=\"Evolutionary Stable Strategy Simulation\" value=\"esssandbox\" icon={<SportsHandballIcon />} />\n              <BottomNavigationAction label=\"Mock Fighting Simulation\" value=\"fakefightingsandbox\" icon={<SportsKabaddiIcon />} />\n\n            </BottomNavigation>\n          </Grid>\n          </Fade>\n          <Box>\n            <br />\n          </Box>\n          <Box>\n            <br />\n          </Box>\n          <Box>\n            <br />\n          </Box>\n          <Fade in={true} timeout={3000}>\n          <Grid container>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"https://www.linkedin.com/in/davidbhan/\" variant=\"body2\">\n                  David Boli Han\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"https://webapp.science.hku.hk/sr4/servlet/enquiry?Type=Course&course_code=MATH3911\" variant=\"body2\">\n                  {\"MATH3911 Game Theory\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Grid container className={classes.paper}>\n                <Copyright />\n            </Grid>\n          </Grid>\n          </Fade>\n\n        </div>\n      </Grid>\n      </Slide>\n    </Grid>\n  );\n}\n","import BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport AccessibilityNewIcon from '@material-ui/icons/AccessibilityNew';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport SportsHandballIcon from '@material-ui/icons/SportsHandball';\nimport SportsKabaddiIcon from '@material-ui/icons/SportsKabaddi';\nimport React from 'react';\nimport { NavLink } from \"react-router-dom\";\n\n\nfunction Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://www.linkedin.com/in/davidbhan/\">\n          David Boli Han\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n\nexport class Navigation extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n  \n    render() {\n      return (\n      <Grid>\n        <Box fullWidth={true}>\n        <br />\n        <NavLink to={this.props.nextURL} style={{ textDecoration: 'none' }}>\n          <Button size=\"large\" fullWidth={true} variant=\"contained\" color=\"primary\">\n            {this.props.buttonText}\n          </Button>\n        </NavLink>\n        </Box>\n  \n      <Box>\n        <br />\n        <br />\n        <BottomNavigation\n          onChange={(event, newValue) => {\n            this.props.setURL(newValue);\n          }}\n          showLabels\n        >\n          <BottomNavigationAction label=\"Introduction\" value=\"home\" icon={<PlayCircleOutlineIcon />} />\n          <BottomNavigationAction label=\"Evolutionary Stable Strategy Calculator\" value=\"hawkdovesandbox\" icon={<AccessibilityNewIcon />} />\n          <BottomNavigationAction label=\"Evolutionary Stable Strategy Sandbox\" value=\"esssandbox\" icon={<SportsHandballIcon />} />\n          <BottomNavigationAction label=\"Mock Fighting Sandbox\" value=\"fakefightingsandbox\" icon={<SportsKabaddiIcon />} />\n          <BottomNavigationAction label=\"Conclusion\" value=\"conclusion\" icon={<CheckCircleOutlineIcon />} />\n        </BottomNavigation>\n      </Box>\n  \n      <Box mt={3} mb={2}>\n        <br />\n        <Copyright />\n      </Box>\n      </Grid>\n      );\n    }\n  }\n  \n  \nexport default Navigation;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\nexport class PayoffMatrix extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n  \n    render() {\n      return (\n        <Grid>\n        <TableContainer component={Paper} style={{ width: \"100%\" }} pt={3} >\n          <Table  size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <TableCell> </TableCell>\n                <TableCell align=\"right\"><b>Hawk</b></TableCell>\n                <TableCell align=\"right\"><b>Dove</b></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow key=\"row0\">\n                <TableCell component=\"th\" scope=\"row\">\n                  <b>Hawk</b>\n                </TableCell>\n                <Tooltip title=\"Computed as (v-d)/2 since there is equal probability of both winning and getting the value of the fruit or losing and getting nothing\" arrow>\n                  <TableCell align=\"right\">{(this.props.v-this.props.d)/2}</TableCell>\n                </Tooltip>\n                <Tooltip title=\"Computed as v since if you play the hawk strategy against a dove, you get the full value of the fruit at no cost\" arrow>\n                  <TableCell align=\"right\">{this.props.v}</TableCell>\n                </Tooltip>\n              </TableRow>\n              <TableRow key=\"row1\">\n                <TableCell component=\"th\" scope=\"row\">\n                  <b>Dove</b>\n                </TableCell>\n                <Tooltip title=\"This will always be 0 since your opponent will always get the full value of the food and you will get none\" arrow>\n                  <TableCell align=\"right\">0</TableCell>\n                </Tooltip>\n                <Tooltip title=\"Computed as v/2 you and your opponenet share the value equally\" arrow>\n                  <TableCell align=\"right\">{this.props.v/2}</TableCell>\n                </Tooltip>\n              </TableRow>\n  \n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n      );\n    }\n  }\n  \nexport default PayoffMatrix;","import { TextField } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport React from 'react';\nimport Navigation from '../components/Footer.js';\nimport PayoffMatrix from '../components/PayoffMatrix2D.js';\nimport Fade from '@material-ui/core/Fade'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  paper: {\n    margin: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(3),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  field: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '17ch',\n    },\n  }\n  \n}));\n\n\nexport default function Hawkdove() {\n  const classes = useStyles();\n  \n  const boxMargin = 3;\n  const boxMarginTop = 0;\n  const boxMarginBottom = 0;\n  \n  const [v, setV] = React.useState(100)\n  const [d, setD] = React.useState(5);\n\n  function setURL(newValue) {\n    var currentURL = window.location.pathname;\n    var goto = currentURL.concat(\"#/\" + newValue);\n    window.location.href = goto;\n  }\n  \n  React.useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  function handleVChange(e) {\n    setV(e.target.value);\n  }\n\n  function handleDChange(e) {\n    setD(e.target.value);\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\" className={classes.root}>\n      <CssBaseline />\n      <Fade in={true} timeout={1500}>\n        <Grid item component={Paper} elevation={6} square>\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <PetsIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\" >\n              <Box lineHeight={2}>\n                The Hawk Dove Game\n              </Box>\n            </Typography>\n            <Typography component=\"p\" >\n              <Box lineHeight={2} m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n                Imagine you are a bird searching for food and you find a fruit on the ground.\n                However, another bird reaches the food at the same time as you. \n                Do you fight with the other bird for sole ownership of the food,\n                or do you try to peacefully share it?\n                The answer to this question is is hard to determine without quantifying the utility and risk of our decisions,\n                so let us add some concrete values for context.\n              </Box>\n              <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n                <br />\n                Suppose that the value of the fruit is <i>v</i> = 100 and that the cost of losing a fight\n                is <i>d</i> = 5. If you choose to fight (Hawk) and the other person chooses to negotiate (Dove),\n                you can aggressively claim the value of fruit for yourself at no cost. \n                If you both choose to negotiate (Dove),\n                the value of the fruit will be shared equally among the two of you. Lastly, if you \n                both choose to fight (Hawk), you both have an equal chance of winning the entire value of \n                of the fruit, but also an equal chance of losing the fight and taking a \n                damage penalty for losing. We can model\n                this through a payoff matrix that shows the outcomes of each matchup below: \n                (Hover over the cells for an explanation of how they are calculated!)\n                <br />\n                <br />\n              </Box>\n            </Typography>\n\n            <PayoffMatrix v={parseInt(v)} d={parseInt(d)}/>\n\n            <Typography component=\"p\">\n              <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n                <br />\n                In this case, it is clear that you should always play a hawk strategy since you are \n                always better off regardless of what your opponents plays. But what if the value of the fruit\n                or the damage of losing a fight changes? \n                For example, what if we set the fruit value to <i>v</i> = 5 and <i>d</i> = 20 instead? \n                Try adjusting the values of v and d below to see their effects on the payoff matrix.\n                <br />\n              </Box>\n            </Typography>\n                \n\n            <form autoComplete=\"off\" className={classes.field} >\n              <TextField id=\"value\" defaultValue={parseInt(v)} type=\"number\" label=\"Value\" onChange={handleVChange}/>\n              <TextField id=\"damage\" defaultValue={parseInt(d)} type=\"number\" label=\"Damage\" onChange={handleDChange}/>\n            </form>\n\n            <Typography component=\"p\">\n              <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n                <br />\n                Sometimes, the optimal strategy you should play is not so clear. Instead of being a \n                \"pure strategy\" (i.e. always playing dove or always playing hawk), the\n                optimal might be a \"mixed strategy\" (e.g. playing dove 50% of the time). \n\n                Furthermore, the ideal strategy to play also depends on what the rest of the population\n                is doing, as we will see shortly.\n\n                The strategies that we want to find are ones that dominate other strategies  \n                over many iterations of this game as long as the majority\n                of a population uses it. These strategies are \n                 known as evolutionary stable strategies (ESSs).\n                <br />\n              </Box>\n            </Typography>\n\n            <Navigation buttonText={\"How do we find an ESS?\"} nextURL={\"/hawkdovesimulation\"} setURL={setURL}/>\n\n            </div>\n        </Grid>\n      </Fade>\n    </Container>\n  );\n}\n\n\n","import { TextField } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Fade from '@material-ui/core/Fade';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport React, {useState, useEffect} from 'react';\nimport Navigation from '../components/Footer.js';\nimport PayoffMatrix from '../components/PayoffMatrix2D.js';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  paper: {\n    margin: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(3),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  text: {\n    margin: theme.spacing(0),\n  }\n\n}));\n\n\nexport default function HawkdoveSandbox() {\n  const classes = useStyles();\n  \n  const boxMargin = 3;\n  const boxMarginTop = 0;\n  const boxMarginBottom = 0;\n  \n  const [v, setV] = React.useState(100)\n  const [d, setD] = React.useState(5);\n\n  function setURL(newValue) {\n    var currentURL = window.location.pathname;\n    var goto = currentURL.concat(\"#/\" + newValue);\n    window.location.href = goto;\n  }\n\n  React.useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  function handleVChange(e) {\n    setV(e.target.value);\n  }\n\n  function handleDChange(e) {\n    setD(e.target.value);\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\" className={classes.root}>\n      <CssBaseline />\n      <Fade in={true} timeout={2000}>\n\n      <Grid item component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <PetsIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\" >\n            <Box lineHeight={2}>\n              Calculating the Optimal Strategies\n            </Box>\n          </Typography>\n          <Typography component=\"p\" >\n            <Box lineHeight={2} m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              The key to determining the optimal strategy is to find one that is \"evolutionary stable\".\n              But what exactly does that mean? \n              Suppose we have a population of birds that always play dove. One day a single bird decides to \n              play the hawk strategy, and proceeds to dominate every other bird it encounters.\n              As the bird get more food and resources, other birds see its success and also\n              play the hawk strategy. Over time, the population of hawks skyrockets, while the population\n              of doves drop. The optimal balance of hawks and doves in the ESS. \n              Let's see if we can come up with a set of rules to determine the \n              ESS depending on the values of <i>v</i> and <i>d</i>.\n            </Box>\n            <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              <br />\n              Look at the original payoff matrix below. It is clear that when the \n              the values of the first row are greater than the values of the second row,\n              a pure hawk strategy is the way to go regardless of what the others are doing.\n              This gives us our first condition of finding an ESS.\n            </Box>\n          </Typography>\n          <Box>\n            <br />\n          </Box>\n          <PayoffMatrix v={parseInt(v)} d={parseInt(d)}/>\n          <Typography component=\"p\">\n            <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              <br />\n              <i>\n              1. When row 1 > row 2 in both columns, a pure hawk strategy is an evolutionary stable strategy.\n              </i>\n              <br />\n            </Box>\n          </Typography>\n              \n          <Typography component=\"p\" >\n            <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              <br />\n              Now what if the value of the fruit were equal to the damage that you would take if you\n              lose a fight? Let us take a look at the payoff matrix where <i>v</i> = <i>d</i> = 10. In this case, \n              if you were playing against a hawk, your gain from the encounter would be 0 regardless\n              of whether you use a hawk strategy or a dove strategy. However, if you were matched up\n              against a dove, you would come out ahead by playing the hawk strategy. Thus, the hawk strategy\n              is always at least as good as the dove strategy, and sometimes better. This gives \n              our second condition for finding an ESS. \n            </Box>\n          </Typography>\n          <Box>\n            <br />\n          </Box>\n          <PayoffMatrix v={10} d={10}/>\n          <Typography component=\"p\">\n            <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              <br />\n              <i>\n              2. When row 1 = row 2 in one column, and row 1 > row 2 in the other column, a pure hawk strategy is evolutionary stable.\n              </i>\n              <br />\n            </Box>\n          </Typography>\n\n          <Typography component=\"p\" >\n            <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              <br />\n              One might wonder what would happen in the edge case if somehow both the value and damage were set to 0.\n              In this situation, there is no ESS since each strategy is equally as good the next.\n            </Box>\n          </Typography>\n          <Box>\n            <br />\n          </Box>\n          <PayoffMatrix v={0} d={0}/>\n          <Typography component=\"p\">\n            <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              <br />\n              <i>\n              3. When row 1 = row 2 in both columns, no strategy is evolutionary stable.\n              </i>\n              <br />\n            </Box>\n          </Typography>\n\n          <Typography component=\"p\" >\n            <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              <br />\n              In the last case, where the damage you risk taking is larger than the value of the food (i.e. <i>v</i> > <i>d</i>),\n              there is no pure evolutionary stable strategy. Intead, we can compute the ideal proportion\n              of Hawk and Dove strategies using a bit of basic algebra as well as the knowledge that \n              the evolutionary stable strategy must have the same or better payoff against any other strategy.\n              We skip the algebra for brevity (<a href=\"https://en.wikipedia.org/wiki/Chicken_(game)\">details here</a>), and\n              show the ideal ratio of hawks to doves is <i>v/d</i> hawks to <i>(1 - v/d)</i> doves. In other words, \n              the population would be resistant to change if the population consisted of a proportion \n              of <i>v/d</i> hawks.\n            </Box>\n          </Typography>\n          <Box>\n            <br />\n          </Box>\n          <PayoffMatrix v={10} d={100}/>\n          <Typography component=\"p\">\n            <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              <br />\n              <i>\n              4. When row 1 {\"<\"} row 2 in one column, and row 1 > row 2 in the other column, the evolutionary \n              stable stategy will be a mixture of v/d hawks and (1-v/d) doves.\n              </i>\n              <br />\n            </Box>\n          </Typography>\n\n\n\n          <Typography component=\"p\">\n            <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              <br />\n              Now that you have an idea of how we can compute the ESS, take some time to \n              play around with different values of v and d in our sandbox and see their corresponding\n              evolutionary stable strategy.\n              <br />\n            </Box>\n          </Typography>\n\n          <Navigation buttonText={\"try out the sandbox\"} nextURL={\"/hawkdovesandbox\"} setURL={setURL}/>\n\n          </div>\n      </Grid>\n      </Fade>\n    </Container>\n  );\n}\n\n\n","import { TextField } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport React from 'react';\nimport Navigation from '../components/Footer.js';\nimport PayoffMatrix from '../components/PayoffMatrix2D.js';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  paper: {\n    margin: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(3),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  text: {\n    margin: theme.spacing(0),\n    // width: '10ch'\n  },\n  field: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '17ch',\n    },\n  }\n\n}));\n\n\nexport default function HawkdoveSandbox() {\n  const classes = useStyles();\n  \n  const boxMargin = 3;\n  const boxMarginTop = 0;\n  const boxMarginBottom = 0;\n  \n  const [v, setV] = React.useState(10)\n  const [d, setD] = React.useState(50);\n\n  function setURL(newValue) {\n    var currentURL = window.location.pathname;\n    var goto = currentURL.concat(\"#/\" + newValue);\n    window.location.href = goto;\n  }\n\n  function handleVChange(e) {\n    setV(e.target.value);\n  }\n\n  function handleDChange(e) {\n    setD(e.target.value);\n  }\n\n  React.useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n\n  function getESS(v, d) {\n    let length = 7;\n\n    if (v == 0 && d == 0) {\n      return \" does not exist\";\n    } else if (parseInt(v) > parseInt(d)) {\n      return \" (\" + (1.00).toString() + \" Hawks, \" + (0.00).toString() + \" Doves)\";\n    }\n    return \" (\" + (v/d).toString().substring(0, length) + \" Hawks, \" + ((1-v/d)).toString().substring(0, length) + \" Doves)\";\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\" className={classes.root}>\n      <CssBaseline />\n      <Fade in={true} timeout={2000}>\n\n      <Grid item component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <PetsIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\" >\n            <Box lineHeight={2}>\n              Hawk Dove Game ESS Calculator\n            </Box>\n          </Typography>\n          <Typography component=\"p\" >\n\n            <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              <br />\n              Take some time to experiment with different values of v and d before continuing on!\n            </Box>\n          </Typography>\n\n          \n          <form autoComplete=\"off\" className={classes.field}>\n            <TextField id=\"value\" placeholder={parseInt(v)} type=\"number\" label=\"Value\" onChange={handleVChange}/>\n            <TextField id=\"damage\" placeholder={parseInt(d)} type=\"number\" label=\"Damage\" onChange={handleDChange}/>\n          </form>\n          <Box>\n            <br />\n          </Box>\n\n          <PayoffMatrix v={parseInt(v)} d={parseInt(d)}/>\n\n          <Typography component=\"p\">\n            <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              <br />\n              <b>\n              Evolutionary Stable Strategy: \n              {getESS(v, d)}\n              </b>\n              <br />\n            </Box>\n          </Typography>\n              \n\n\n\n          <Typography component=\"p\">\n            <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              <br />\n              Okay, this is just a theoretical model. How would things look if we \n              actually ran a population simulation?\n              <br />\n            </Box>\n          </Typography>\n\n          <Navigation buttonText={\"population simuation\"} nextURL={\"/ess\"} setURL={setURL}/>\n\n          </div>\n      </Grid>\n      </Fade>\n    </Container>\n  );\n}\n\n\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Table from '@material-ui/core/Table';\nimport Chart from './SimulationGraph.js'\n\nclass Bird {\n  constructor(strategy, payoff) {\n    this.strategy = strategy; // 0 is hawk, 1 is dove\n    this.payoff = payoff;\n  }\n}\n\n\nclass PopulationStatistics {\n  constructor(round, hawk, dove, hawkRatio) {\n    this.round = round; \n    this.hawk = hawk;\n    this.dove = dove; \n    this.hawkRatio = hawkRatio;\n  }\n}\n\n\nvar initializePopulation = (p, v) => {\n  let out = [];\n  var i;\n  for (i = 0; i < Math.floor(p*v); i++) {\n    out[i] = new Bird(0, 0);\n  }\n  for (i = Math.floor(p*v); i < p; i++) {\n    out[i] = new Bird(1, 0);\n  }\n  return out\n}\n\n\nvar determinePayoff = (v, d, player, opponent) => {\n  if (player.strategy == 0 && opponent.strategy == 0) {\n    return (v-d)/2;\n  } else if (player.strategy == 0 && opponent.strategy == 1) {\n    return v;\n  } else if (player.strategy == 1 && opponent.strategy == 0) {\n    return 0;\n  } else {\n    return v/2\n  }\n}\n\nvar updatePayoffs = (pop, v, d) => {\n  for (const i of Array(pop.length).keys()) {\n    let bird = pop[i]\n    const opponent = pop[Math.floor(Math.random() * Math.floor(pop.length))]\n    bird.payoff = determinePayoff(v, d, bird, opponent)\n  }\n}\n\nvar updatePopulation = (pop, k) => {\n  for (const x of Array(k).keys()) {\n    let bird = pop[Math.floor(Math.random() * Math.floor(pop.length))]; \n    const compareTo = pop[Math.floor(Math.random() * Math.floor(pop.length))];\n    if (compareTo.payoff > bird.payoff) {\n      bird.strategy = compareTo.strategy;\n    }\n  }\n}\n\nvar countPopulation = (population) => {\n  let hawk = 0;\n  let dove = 0;\n  for (const i of Array(population.length).keys()) {\n    const bird = population[i]\n    if (bird.strategy == 0){\n      hawk += 1;\n    } else {\n      dove += 1;\n    }\n  }\n  return [hawk, dove, (hawk)/(hawk+dove)];\n}\n\nvar popStats = [];\nvar population;\n\nexport class ImitationSimulation extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      run: this.props.run\n    };\n    population = initializePopulation(this.props.p, this.props.q)\n    popStats = []\n\n    for (const i of Array(this.props.n).keys()) {\n      let [hawk, dove, hawkRatio] = countPopulation(population);\n      var x = new PopulationStatistics(i, hawk, dove, hawkRatio);\n      popStats.push(x)\n      updatePayoffs(population, this.props.v, this.props.d);\n      updatePopulation(population, this.props.k);\n    }\n  }\n\n  componentDidUpdate() {\n    console.log(this.props.q)\n    population = initializePopulation(this.props.p, this.props.q)\n    popStats = []\n\n    for (const i of Array(this.props.n).keys()) {\n      let [hawk, dove, hawkRatio] = countPopulation(population);\n      var x = new PopulationStatistics(i, hawk, dove, hawkRatio);\n      popStats.push(x)\n      updatePayoffs(population, this.props.v, this.props.d);\n      updatePopulation(population, this.props.k);\n    }\n  }\n\n  render() {\n    return (\n      <Grid component={Paper}>\n        <Chart popStats={popStats}/>\n        <TableContainer >\n          <Table size=\"small\" aria-label=\"sticky table\" >\n          <TableHead>\n              <TableRow >\n                <TableCell><b>Round</b></TableCell>\n                <TableCell align=\"right\"><b>Hawks</b></TableCell>\n                <TableCell align=\"right\"><b>Doves</b></TableCell>\n                <TableCell align=\"right\"><b>Hawk Proportion</b></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {popStats.map((row) => (\n                <TableRow key={'round' + row.round}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.round}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.hawk}</TableCell>\n                  <TableCell align=\"right\">{row.dove}</TableCell>\n                  <TableCell align=\"right\">{row.hawkRatio}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n    );\n  }\n}\n  \nexport default ImitationSimulation;\n\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Table from '@material-ui/core/Table';\nimport rd3 from 'react-d3-library'\n\n\nexport class Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        data: this.props.popStats\n    };\n  }\n\n\trender() {\n\t\t\n\t\treturn (\n      <div>\n          {/* much wow */}\n      </div>\n\t\t);\n\t}\n}\n \nexport default Chart;\n","import { TextField, Fade } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport React, {useState, useEffect} from 'react';\nimport Navigation from '../components/Footer.js';\nimport PayoffMatrix from '../components/PayoffMatrix2D.js';\nimport ImitationSimulation from '../components/ImitationSimulation.js';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  paper: {\n    margin: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(3),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  text: {\n    margin: theme.spacing(0),\n  }\n\n}));\n\n\nexport default function Ess() {\n  const classes = useStyles();\n  \n  const boxMargin = 3;\n  const boxMarginTop = 0;\n  const boxMarginBottom = 0;\n  \n  const [v, setV] = React.useState(100)\n  const [d, setD] = React.useState(5);\n  const [p, setP] = React.useState(500)\n  const [q, setQ] = React.useState(.10);\n  const [k, setK] = React.useState(100)\n  const [n, setN] = React.useState(50);\n\n  function setURL(newValue) {\n    var currentURL = window.location.pathname;\n    var goto = currentURL.concat(\"#/\" + newValue);\n    window.location.href = goto;\n  }\n\n  React.useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  function handleVChange(e) {\n    setV(e.target.value);\n  }\n  function handleDChange(e) {\n    setD(e.target.value);\n  }\n  function handlePChange(e) {\n    setP(e.target.value);\n  }\n  function handleQChange(e) {\n    setQ(e.target.value);\n  }\n  function handleKChange(e) {\n    setK(e.target.value);\n  }\n  function handleNChange(e) {\n    setN(e.target.value);\n  }\n\n  const [showResults, setShowResults] = React.useState(false)\n  function computeSimulation() {\n    setShowResults(true)\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\" className={classes.root}>\n      <CssBaseline />\n      <Fade in={true} timeout={2000}>\n\n      <Grid item component={Paper} elevation={6} square>\n\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <PetsIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\" >\n            <Box lineHeight={2}>\n              Rules of the Simulation\n            </Box>\n          </Typography>\n          <Typography component=\"p\" >\n            <Box lineHeight={2} m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              In this simulation, we have a value, <i>v</i>, for the value of food and a damage, <i>d</i>,\n              for the damage the loser of a fight incurs. Furthemore, we have the initial population\n              size, <i>p</i>, that denotes the amount of birds, and a value, <i>q</i>, that denotes the initial proportion\n              of the population that uses a hawk strategy. \n            </Box>\n            <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              <br />\n              Each round, the birds will all be paired against a random matchup to play the game.\n              Their payoff values are computed and then stored. After each round, we choose a random number of birds, <i>k</i>, that \n              will each be randomly compared to another bird. If the other bird\n              received a higher payoff, then the original bird will switch strategies to that of the other bird.\n              We can run this simulation for <i>n</i> rounds and see how the population proportions tend to stabilize after a certain\n              number of rounds.              \n            </Box>\n            <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              <br />\n              To start, let us choose <i>v</i> = {v}, <i>d</i> = {d}, <i>p</i> = {p}, <i>q</i> = {q}, <i>k</i> = {k}, and <i>n</i> = {n} with the payoff matrix show below.\n            </Box>\n          </Typography>\n          <Box>\n            <br />\n          </Box>\n          <PayoffMatrix v={parseInt(v)} d={parseInt(d)}/>\n\n          <Typography component=\"p\">\n            <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              <br />\n              In other words, we start of with a population {p} birds, {p*q} of which play a hawk strategy. After each\n              round, {k} birds randomly check out the payoff of another bird and switches to their strategy if the other bird's payoff is \n              better. We run this for {n} rounds, and see how the population proportion changes over time. \n              Note, as we discussed earlier, we should predict that the ESS would be a population full of hawks. Let us run the simulation\n              and see how it turns out! (Note that the simulation performance depends on random variable changes, so will change slightly each time.) \n              <br />\n            </Box>\n          </Typography>\n          <Box>\n            <br />\n          </Box>\n\n\n          <FormControlLabel\n            control={\n              <Button variant=\"outlined\" color=\"primary\" onClick={computeSimulation}>\n                Run Simulation\n              </Button>}\n          />\n\n          <Box>\n            <br />\n          </Box>\n\n          <Grid>\n            { showResults ? <Grid className={classes.paper}>\n              <ImitationSimulation v={parseInt(v)} d={parseInt(d)} p={parseInt(p)} q={parseFloat(q)} k={parseInt(k)} n={parseInt(n)}/>\n              <Typography component=\"p\">\n            <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              <br />\n              That's pretty cool! We see that the ratio of hawks\n              converges to 1, just as we expected from our calculations.\n              Let's try out different starting values in our sandbox to how the population\n              proportion convertes to our predicted ESS.\n              <br />\n            </Box>\n          </Typography>              \n              </Grid>\n             : null }\n          </Grid>\n\n\n\n          <Navigation buttonText={\"try out the sandbox\"} nextURL={\"/esssandbox\"} setURL={setURL}/>\n\n          </div>\n      </Grid>\n          </Fade>\n    </Container>\n  );\n}\n\n\n","import { TextField, Fade } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport React, {useState, useEffect} from 'react';\nimport Navigation from '../components/Footer.js';\nimport PayoffMatrix from '../components/PayoffMatrix2D.js';\nimport ImitationSimulation from '../components/ImitationSimulation.js';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  paper: {\n    margin: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(3),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  text: {\n    margin: theme.spacing(0),\n  },\n  field: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '17ch',\n    },\n  }\n}));\n\n\nexport default function EssSandbox() {\n  const classes = useStyles();\n  \n  const boxMargin = 3;\n  const boxMarginTop = 0;\n  const boxMarginBottom = 0;\n  \n  const [v, setV] = React.useState(2)\n  const [d, setD] = React.useState(5);\n  const [p, setP] = React.useState(500)\n  const [q, setQ] = React.useState(.10);\n  const [z, setZ] = React.useState(.90);\n  const [k, setK] = React.useState(50)\n  const [n, setN] = React.useState(100);\n\n  function setURL(newValue) {\n    var currentURL = window.location.pathname;\n    var goto = currentURL.concat(\"#/\" + newValue);\n    window.location.href = goto;\n  }\n\n  React.useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  function getESS(v, d) {\n    let length = 7;\n\n    if (v == 0 && d == 0) {\n      return \" does not exist\";\n    } else if (parseInt(v) > parseInt(d)) {\n      return \" (\" + (1.00).toString() + \" Hawks, \" + (0.00).toString() + \" Doves)\";\n    }\n    return \" (\" + (v/d).toString().substring(0, length) + \" Hawks, \" + ((1-v/d)).toString().substring(0, length) + \" Doves)\";\n  }\n\n  function handleVChange(e) {\n    setV(e.target.value);\n  }\n  function handleDChange(e) {\n    setD(e.target.value);\n  }\n  function handlePChange(e) {\n    setP(e.target.value);\n  }\n  function handleQChange(e) {\n    if (parseFloat(e.target.value) >= 1) {\n      alert(\"This value must be less than 1 (e.g. 0.6)\")\n    }\n    setQ(e.target.value);\n    setZ(1 - e.target.value)\n  }\n  function handleZChange(e) {\n    setZ(e.target.value);\n  }\n  function handleKChange(e) {\n    setK(e.target.value);\n  }\n  function handleNChange(e) {\n    setN(e.target.value);\n  }\n  const [run, setRun] = React.useState(false)\n  const [showResults, setShowResults] = React.useState(false)\n  function computeSimulation() {\n    setRun(!run)\n    setShowResults(true)\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\" className={classes.root}>\n      <CssBaseline />\n      <Grid item component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <PetsIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\" >\n            <Box lineHeight={2}>\n              Evolutionary Stable Strategy Imitation Simulation\n            </Box>\n          </Typography>\n          <Typography component=\"p\" >\n            <Box lineHeight={2} m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              Input the starting parameters of the population of your choice and then hit the \n              start simulation button once you are satisfied with the payoff matrix and population \n              parameters of your choice. Note that higher values of k will allow the population to change \n              far quicker, but the final result will be less stable. \n              <br />\n            </Box>\n          </Typography>\n          <Box>\n            <br />\n          </Box>\n              <Grid className={classes.paper}>\n              There is some weird behavior with\n              autoupdating, so be sure to click the run simulation button each time you change the parameters! If anything breaks, just refresh the page :)\n                \n              </Grid>\n          <Box>\n            <br />\n          </Box>\n\n          <form autoComplete=\"off\" className={classes.field}>\n            <TextField id=\"value\" defaultValue={parseInt(v)} type=\"number\" label=\"Value (v)\" onChange={handleVChange}/>\n            <TextField id=\"damage\" defaultValue={parseInt(d)} type=\"number\" label=\"Damage (d)\" onChange={handleDChange}/>\n          </form>\n          <Box>\n            <br />\n          </Box>\n\n\n          <PayoffMatrix v={parseInt(v)} d={parseInt(d)}/>\n\n\n          <Typography component=\"p\">\n            <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              <br />\n              <b>\n              Expected Stable Strategy: \n              {getESS(v, d)}\n              </b>\n              <br />\n            </Box>\n          </Typography>\n              \n\n\n          <form autoComplete=\"off\" className={classes.field}>\n            <TextField id=\"population\" defaultValue={parseInt(p)} type=\"number\" label=\"Population (p)\" onChange={handlePChange}/>\n            <TextField id=\"learningRate\" defaultValue={parseInt(k)} type=\"number\" label=\"Learning Size (k)\" onChange={handleKChange}/>\n            <TextField id=\"rounds\" defaultValue={parseInt(n)} type=\"number\" label=\"Num. Rounds (n)\" onChange={handleNChange}/>\n          </form>\n          <form autoComplete=\"off\" className={classes.field}>\n            <TextField id=\"hawks\" defaultValue={parseFloat(q)} type=\"number\" label=\"Hawk Ratio (q)\" onChange={handleQChange}/>\n            <TextField disabled id=\"doves\" value={parseFloat(z)} variant=\"filled\" label=\"Dove Ratio\"/>\n          </form>\n          <Box>\n            <br />\n          </Box>\n\n\n          <FormControlLabel\n            control={\n              <Button variant=\"outlined\" color=\"primary\" onClick={computeSimulation}>\n                Run Simulation\n              </Button>}\n          />\n\n          <Box>\n            <br />\n            <br />\n          </Box>\n\n          <Grid>\n            { showResults ? \n            <Grid className={classes.paper}>\n              <ImitationSimulation v={parseInt(v)} d={parseInt(d)} p={parseInt(p)} q={parseFloat(q)} k={parseInt(k)} n={parseInt(n)} run={run}/>\n              <Typography component=\"p\">\n                <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n                  <br />\n                  The simulation is a powerful tool that shows off the convergence of a population of strategies\n                  over time. But what if totally new strategies entered the population? What if an animal was willing\n                  to put up a fighting display at a certain cost to try to scare away the doves?\n                  <br />\n                </Box>\n              </Typography>             \n            </Grid>\n            : null }\n          </Grid>\n\n\n        \n\n\n\n          <Navigation buttonText={\"incorporating mock fighting strategies\"} nextURL={\"/fakefighting\"} setURL={setURL}/>\n\n          </div>\n      </Grid>\n    </Container>\n  );\n}\n\n\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\nexport class PayoffMatrix3D extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n  \n    render() {\n      return (\n        <Grid>\n        <TableContainer component={Paper} style={{ width: \"100%\" }} pt={3} >\n          <Table  size=\"small\" aria-label=\"a dense table\">\n            <TableHead>\n              <TableRow>\n                <TableCell> </TableCell>\n                <TableCell align=\"right\"><b>Hawk</b></TableCell>\n                <TableCell align=\"right\"><b>Crow</b></TableCell>\n                <TableCell align=\"right\"><b>Dove</b></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow key=\"row0\">\n                <TableCell component=\"th\" scope=\"row\">\n                  <b>Hawk</b>\n                </TableCell>\n                <Tooltip title=\"Computed as (v-d)/2 since there is equal probability of both winning and getting the value of the fruit or losing and getting nothing\" arrow>\n                  <TableCell align=\"right\">{(this.props.v-this.props.d)/2}</TableCell>\n                </Tooltip>\n                <Tooltip title=\"Computed as v since if you play the hawk strategy against a crow, you get the full value of the fruit at no cost\" arrow>\n                  <TableCell align=\"right\">{this.props.v}</TableCell>\n                </Tooltip>\n                <Tooltip title=\"Computed as v since if you play the hawk strategy against a dove, you get the full value of the fruit at no cost\" arrow>\n                  <TableCell align=\"right\">{this.props.v}</TableCell>\n                </Tooltip>\n              </TableRow>\n              <TableRow key=\"row1\">\n                <TableCell component=\"th\" scope=\"row\">\n                  <b>Crow</b>\n                </TableCell>\n                <Tooltip title=\"This will always be -c since you will fight against the hawk until you incur cost\" arrow>\n                  <TableCell align=\"right\">{0 - this.props.c}</TableCell>\n                </Tooltip>\n                <Tooltip title=\"Computed as (v-c)/2 you and your opponenet are equally likely to win or lose the fight\" arrow>\n                  <TableCell align=\"right\">{(this.props.v-this.props.c)/2}</TableCell>\n                </Tooltip>\n                <Tooltip title=\"Computed as v since if you play the crow strategy against a dove, you get the full value of the fruit at no cost\" arrow>\n                  <TableCell align=\"right\">{this.props.v}</TableCell>\n                </Tooltip>\n              </TableRow>\n  \n              <TableRow key=\"row2\">\n                <TableCell component=\"th\" scope=\"row\">\n                  <b>Dove</b>\n                </TableCell>\n                <Tooltip title=\"This will always be 0 since your opponent will always get the full value of the food and you will get none\" arrow>\n                  <TableCell align=\"right\">0</TableCell>\n                </Tooltip>\n                <Tooltip title=\"This will always be 0 since your opponent will always get the full value of the food and you will get none\" arrow>\n                  <TableCell align=\"right\">0</TableCell>\n                </Tooltip>\n                <Tooltip title=\"Computed as v/2 you and your opponenet share the value equally\" arrow>\n                  <TableCell align=\"right\">{this.props.v/2}</TableCell>\n                </Tooltip>\n              </TableRow>\n  \n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n      );\n    }\n  }\n  \nexport default PayoffMatrix3D;","import { TextField } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport React from 'react';\nimport Navigation from '../components/Footer.js';\nimport PayoffMatrix3D from '../components/PayoffMatrix3D.js';\nimport Fade from '@material-ui/core/Fade'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  paper: {\n    margin: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(3),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  field: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '17ch',\n    },\n  }\n  \n\n}));\n\n\nexport default function Fakefighting() {\n  const classes = useStyles();\n  \n  const boxMargin = 3;\n  const boxMarginTop = 0;\n  const boxMarginBottom = 0;\n  \n  const [v, setV] = React.useState(100)\n  const [d, setD] = React.useState(5);\n  const [c, setC] = React.useState(1);\n\n  function setURL(newValue) {\n    var currentURL = window.location.pathname;\n    var goto = currentURL.concat(\"#/\" + newValue);\n    window.location.href = goto;\n  }\n  \n  React.useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  function handleVChange(e) {\n    setV(e.target.value);\n  }\n  function handleDChange(e) {\n    setD(e.target.value);\n  }\n  function handleCChange(e) {\n    setC(e.target.value);\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\" className={classes.root}>\n      <CssBaseline />\n      <Fade in={true} timeout={1500}>\n        <Grid item component={Paper} elevation={6} square>\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <PetsIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\" >\n              <Box lineHeight={2}>\n                Scaring Away the Doves\n              </Box>\n            </Typography>\n            <Typography component=\"p\" >\n              <Box lineHeight={2} m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n                Sometimes, animals may be willing to make a display and fight until they incur\n                a certain level of damage. We will call animals who use this strategy crows, and \n                the cost that they are willing to fight up to <i>c</i>.\n              </Box>\n              <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n                <br />\n                Once again, we suppose the value of the fruit is v = 100 and that the cost of losing a fight\n                is d = 5. However, now we have a new crow strategy who is willing to fight until a cost, c = 1, is\n                taken. In this case, when a crow goes against a dove, the crow is able to get all the value\n                for itself. However, when a crow goes up against a hawk, the crow is guaranteed to take\n                a cost equal to c. When a crow fights another crow, they both have equal chances of winning\n                and getting the fruit, or losing and incurring the cost. We can see the payoff matrix below:\n                \n                <br />\n                <br />\n              </Box>\n            </Typography>\n\n            <PayoffMatrix3D v={parseInt(v)} d={parseInt(d)} c={parseInt(c)}/>\n\n            <Typography component=\"p\">\n              <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n                <br />\n                Clearly it can pay off to be a crow rather than a dove in certain situations. \n                Try adjusting the values in the form below to see its effect on the payoff matrix above.\n                You can also hover over a table cell to see how that value is computed. (Note that\n                in this scenario, we always assume c > 0 and d > c. If c = 0, the the crow is just a dove.\n                If c > d, then we can simply change the labels for the hawk and the crow.)\n                <br />\n              </Box>\n            </Typography>\n                \n\n            <form autoComplete=\"off\" className={classes.field}>\n              <TextField id=\"value\" defaultValue={parseInt(v)} type=\"number\" label=\"Value\" onChange={handleVChange}/>\n              <TextField id=\"damage\" defaultValue={parseInt(d)} type=\"number\" label=\"Damage\" onChange={handleDChange}/>\n              <TextField id=\"cost\" defaultValue={parseInt(c)} type=\"number\" label=\"Cost\" onChange={handleCChange}/>\n            </form>\n\n            <Typography component=\"p\">\n              <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n                <br />\n                In a multiplayer game, it is possible for there to be multiple evolutionary stable strategies, and it's computation\n                is not as straightforward as in a two person game. Instead, let's look at simulating a multistrategy\n                population to see how it converges over several generations.\n                The convergence to a strategy heavily depends on the initial breakdowns of a population as well as the parameters\n                of the game. Of course, there is a bit of randomness as well due to the nature of the simulation.\n                Let's take a look at how this would work.\n                <br />\n              </Box>\n            </Typography>\n\n            <Navigation buttonText={\"Simulating a multistrategy population\"} nextURL={\"/fakefightingsimulation\"} setURL={setURL}/>\n\n            </div>\n        </Grid>\n      </Fade>\n    </Container>\n  );\n}\n\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Table from '@material-ui/core/Table';\n\n\nclass Bird {\n  constructor(strategy, payoff) {\n    this.strategy = strategy; // 0 is hawk, 1 is crow, 2 is dove\n    this.payoff = payoff;\n  }\n}\n\n\nclass PopulationStatistics {\n  constructor(round, hawk, crow, dove, hawkRatio, crowRatio, doveRatio) {\n    this.round = round; \n    this.hawk = hawk;\n    this.crow = crow; \n    this.dove = dove; \n    this.hawkRatio = hawkRatio;\n    this.crowRatio = crowRatio;\n    this.doveRatio = doveRatio;\n  }\n}\n\n\nvar initializePopulation = (p, q, r) => {\n  let out = [];\n  var i;\n  for (i = 0; i < Math.floor(p*q); i++) {\n    out[i] = new Bird(0, 0);\n  }\n  for (i = Math.floor(p*q); i < Math.floor(p*q) + Math.floor(p*r); i++) {\n    out[i] = new Bird(1, 0);\n  }\n  for (i = Math.floor(p*q) + Math.floor(p*r); i < p; i++) {\n    out[i] = new Bird(2, 0);\n  }\n  return out\n}\n\n\nvar determinePayoff = (v, c, d, player, opponent) => {\n  if (player.strategy == 0 && opponent.strategy == 0) {\n    return (v-d)/2;\n  } else if (player.strategy == 0 && opponent.strategy == 1) {\n    return v;\n  } else if (player.strategy == 0 && opponent.strategy == 2) {\n    return v;\n  } else if (player.strategy == 1 && opponent.strategy == 0) {\n    return -c;\n  } else if (player.strategy == 1 && opponent.strategy == 1) {\n    return (v-c)/2;\n  } else if (player.strategy == 1 && opponent.strategy == 2) {\n    return v;\n  } else if (player.strategy == 2 && opponent.strategy == 0) {\n    return 0;\n  } else if (player.strategy == 2 && opponent.strategy == 1) {\n    return 0;\n  } else {\n    return v/2\n  }\n}\n\nvar updatePayoffs = (pop, v, c, d) => {\n  for (const i of Array(pop.length).keys()) {\n    let bird = pop[i]\n    const opponent = pop[Math.floor(Math.random() * Math.floor(pop.length))]\n    bird.payoff = determinePayoff(v, c, d, bird, opponent)\n  }\n}\n\nvar updatePopulation = (pop, k) => {\n  for (const x of Array(k).keys()) {\n    let bird = pop[Math.floor(Math.random() * Math.floor(pop.length))]; \n    const compareTo = pop[Math.floor(Math.random() * Math.floor(pop.length))];\n    if (compareTo.payoff > bird.payoff) {\n      bird.strategy = compareTo.strategy;\n    }\n  }\n}\n\nvar countPopulation = (population) => {\n  let hawk = 0;\n  let crow = 0\n  let dove = 0;\n  for (const i of Array(population.length).keys()) {\n    const bird = population[i]\n    if (bird.strategy == 0){\n      hawk += 1;\n    } else if (bird.strategy == 1) {\n      crow += 1;\n    } else {\n      dove += 1;\n    }\n  }\n  return [hawk, crow, dove, (hawk)/(population.length), (crow)/(population.length), (dove)/(population.length)];\n}\n\nvar popStats = [];\nvar population;\n\nexport class ImitationSimulation3D extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      run: this.props.run\n    };\n    population = initializePopulation(this.props.p, this.props.q, this.props.r)\n    popStats = []\n\n    for (const i of Array(this.props.n).keys()) {\n      let [hawk, crow, dove, hawkRatio, crowRatio, doveRatio] = countPopulation(population);\n      var x = new PopulationStatistics(i, hawk, crow, dove, hawkRatio, crowRatio, doveRatio);\n      console.log(x)\n      popStats.push(x)\n      updatePayoffs(population, this.props.v, this.props.c, this.props.d);\n      updatePopulation(population, this.props.k);\n    }\n  }\n\n  componentDidUpdate() {\n    console.log(this.props.q)\n    population = initializePopulation(this.props.p, this.props.q, this.props.r)\n    popStats = []\n\n    for (const i of Array(this.props.n).keys()) {\n      let [hawk, crow, dove, hawkRatio, crowRatio, doveRatio] = countPopulation(population);\n      var x = new PopulationStatistics(i, hawk, crow, dove, hawkRatio, crowRatio, doveRatio);\n      console.log(x)\n      popStats.push(x)\n      updatePayoffs(population, this.props.v, this.props.c, this.props.d);\n      updatePopulation(population, this.props.k);\n    }\n  }\n\n\n  render() {\n    return (\n      <Grid>\n        <TableContainer component={Paper} >\n          <Table size=\"small\" aria-label=\"sticky table\" >\n          <TableHead>\n              <TableRow >\n                <TableCell><b>Round</b></TableCell>\n                <TableCell align=\"right\"><b>Hawks</b></TableCell>\n                <TableCell align=\"right\"><b>Crows</b></TableCell>\n                <TableCell align=\"right\"><b>Doves</b></TableCell>\n                <TableCell align=\"right\"><b>Hawk Proportion</b></TableCell>\n                <TableCell align=\"right\"><b>Crow Proportion</b></TableCell>\n                <TableCell align=\"right\"><b>Dove Proportion</b></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {popStats.map((row) => (\n                <TableRow key={'round' + row.round}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.round}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.hawk}</TableCell>\n                  <TableCell align=\"right\">{row.crow}</TableCell>\n                  <TableCell align=\"right\">{row.dove}</TableCell>\n                  <TableCell align=\"right\">{row.hawkRatio}</TableCell>\n                  <TableCell align=\"right\">{row.crowRatio}</TableCell>\n                  <TableCell align=\"right\">{row.doveRatio}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n    );\n  }\n}\n  \nexport default ImitationSimulation3D;\n\n","import { TextField } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport React, {useState, useEffect} from 'react';\nimport Navigation from '../components/Footer.js';\nimport PayoffMatrix3D from '../components/PayoffMatrix3D.js';\nimport ImitationSimulation3D from '../components/ImitationSimulation3D.js';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  paper: {\n    margin: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(3),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  text: {\n    margin: theme.spacing(0),\n  }\n\n}));\n\n\nexport default function FakefightingSim() {\n  const classes = useStyles();\n  \n  const boxMargin = 3;\n  const boxMarginTop = 0;\n  const boxMarginBottom = 0;\n  \n  const [v, setV] = React.useState(100)\n  const [d, setD] = React.useState(5);\n  const [c, setC] = React.useState(1);\n  const [p, setP] = React.useState(500)\n  const [q, setQ] = React.useState(.10);\n  const [r, setR] = React.useState(.10);\n  const [k, setK] = React.useState(200)\n  const [n, setN] = React.useState(30);\n\n  function setURL(newValue) {\n    var currentURL = window.location.pathname;\n    var goto = currentURL.concat(\"#/\" + newValue);\n    window.location.href = goto;\n  }\n    \n  React.useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  function handleVChange(e) {\n    setV(e.target.value);\n  }\n  function handleDChange(e) {\n    setD(e.target.value);\n  }\n  function handleCChange(e) {\n    setC(e.target.value);\n  }\n  function handlePChange(e) {\n    setP(e.target.value);\n  }\n  function handleQChange(e) {\n    setQ(e.target.value);\n  }\n  function handleRChange(e) {\n    setQ(e.target.value);\n  }\n  function handleKChange(e) {\n    setK(e.target.value);\n  }\n  function handleNChange(e) {\n    setN(e.target.value);\n  }\n\n  const [showResults, setShowResults] = React.useState(false)\n  function computeSimulation() {\n    setShowResults(true)\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\" className={classes.root}>\n      <CssBaseline />\n      <Grid item component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <PetsIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\" >\n            <Box lineHeight={2}>\n              Multiplayer Simulation\n            </Box>\n          </Typography>\n          <Typography component=\"p\" >\n            <Box lineHeight={2} m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              Similar to the first simulation, we have a value, <i>v</i>, for the value of food and a damage, <i>d</i>,\n              for the damage the loser of a fight incurs. Furthemore, we have the initial population\n              size, <i>p</i>, of the birds, and a value, <i>q</i>, that denotes the initial proportion\n              of the population that uses a hawk strategy. Only now, we also include a value, <i>c</i>, for the cost\n              that a crow is willing to take and a value, <i>r</i> for the initial population size of the crows. Note that \n              the sum of <i>q</i> and <i>r</i> must be less than 1. \n            </Box>\n            <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              <br />\n              Each round, the birds will all be paired against a random matchup to play the game.\n              Their payoff values are computed and then stored. After each round, we choose a random number of birds, <i>k</i>, that \n              will each be randomly compared to another bird. If the other bird\n              received a higher payoff, then the original bird will switch strategies to that of the other bird. Higher values of k will let \n              the population proportion converge faster, but the convergence will be less stable.\n              We can run this simulation for n rounds and see how the population proportions tend to stabilize after a certain\n              number of rounds.              \n            </Box>\n            <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              <br />\n              To start, let us choose v = {v}, d = {d}, c = {c}, p = {p}, q = {q}, r = {r}, k = {k}, and n = {n} with the payoff matrix show below.\n            </Box>\n          </Typography>\n          <Box>\n            <br />\n          </Box>\n          <PayoffMatrix3D v={parseInt(v)} d={parseInt(d)} c={parseInt(c)}/>\n\n          <Typography component=\"p\">\n            <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              <br />\n              In other words, we start of with a population {p} birds, {p*q} of which play a hawk strategy, {p*r} of which play a crow strategy, \n              and {p - p*q - p*r} of which play a dove strategy. After each round, {k} birds randomly check out the payoff of another bird and switches to their strategy if the other bird's payoff is \n              better. We run this for {n} rounds, and see how the population proportion changes over time. \n               Let us run the simulation\n              and see how it turns out! (Note that the simulation performance depends on random variable changes, so will change slightly each time.) \n              <br />\n            </Box>\n          </Typography>\n          <Box>\n            <br />\n          </Box>\n\n          <FormControlLabel\n            control={\n              <Button variant=\"outlined\" color=\"primary\" onClick={computeSimulation}>\n                Run Simulation\n              </Button>}\n          />\n\n          <Box>\n            <br />\n          </Box>\n\n          <Grid>\n            { showResults ?  <Grid className={classes.paper}>\n              <ImitationSimulation3D v={parseInt(v)} d={parseInt(d)} c={parseInt(c)} p={parseInt(p)} q={parseFloat(q)} r={parseFloat(r)} k={parseInt(k)} n={parseInt(n)}/>\n              <Typography component=\"p\">\n            <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              <br />\n              That's pretty cool! In case you caught on beforehand, we see that the values in row 1 are greater or equal to those in\n              rows 2 and 3 for every column, so Hawk is clearly a theoretically stable strategy. \n              Through this simulation, we got to see the population of hawks, crows, and doves converge roughly to this \n              expected strategy.\n              Let's try out different starting values in our sandbox to how the population\n              proportion convertes to our predicted ESS.\n              <br />\n            </Box>\n          </Typography>\n                  </Grid>\n             : null }\n          </Grid>\n\n\n\n\n          <Navigation buttonText={\"try out the sandbox\"} nextURL={\"/fakefightingsandbox\"} setURL={setURL}/>\n\n          </div>\n      </Grid>\n    </Container>\n  );\n}\n\n\n","import { TextField } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport React, {useState, useEffect} from 'react';\nimport Navigation from '../components/Footer.js';\nimport PayoffMatrix3D from '../components/PayoffMatrix3D.js';\nimport ImitationSimulation3D from '../components/ImitationSimulation3D.js';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  paper: {\n    margin: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(3),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  field: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '17ch',\n    },\n  }\n\n}));\n\n\nexport default function FakefightingSandbox() {\n  const classes = useStyles();\n  \n  const boxMargin = 3;\n  const boxMarginTop = 0;\n  const boxMarginBottom = 0;\n  \n  const [v, setV] = React.useState(1)\n  const [d, setD] = React.useState(5);\n  const [c, setC] = React.useState(1);\n  const [p, setP] = React.useState(500)\n  const [q, setQ] = React.useState(.10);\n  const [r, setR] = React.useState(.10);\n  const [z, setZ] = React.useState(.80);\n  const [k, setK] = React.useState(30)\n  const [n, setN] = React.useState(200);\n\n  function setURL(newValue) {\n    var currentURL = window.location.pathname;\n    var goto = currentURL.concat(\"#/\" + newValue);\n    window.location.href = goto;\n  }\n    \n  React.useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  function handleVChange(e) {\n    setV(e.target.value);\n  }\n  function handleDChange(e) {\n    setD(e.target.value);\n  }\n  function handleCChange(e) {\n    setC(e.target.value);\n  }\n  function handlePChange(e) {\n    setP(e.target.value);\n  }\n  function handleQChange(e) {\n    if ((e.target.value + r) > 1) {\n      alert(\"The sum of hawk and crow ratios must be less than 1\")\n    }\n    setQ(e.target.value);\n    setZ(1 - e.target.value - r);\n  }\n  function handleRChange(e) {\n    if ((e.target.value + q) > 1) {\n      alert(\"The sum of hawk and crow ratios must be less than 1\")\n    }\n    setR(e.target.value);\n    setZ(1 - e.target.value - q);\n  }\n  function handleKChange(e) {\n    setK(e.target.value);\n  }\n  function handleNChange(e) {\n    setN(e.target.value);\n  }\n\n  const [run, setRun] = React.useState(false)\n  const [showResults, setShowResults] = React.useState(false)\n  function computeSimulation() {\n    setRun(!run)\n    setShowResults(true)\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\" className={classes.root}>\n      <CssBaseline />\n      <Grid item component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <PetsIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\" >\n            <Box lineHeight={2}>\n              Multiplayer Simulation\n            </Box>\n          </Typography>\n          <Typography component=\"p\" >\n            <Box lineHeight={2} m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n            Input the starting parameters of the population of your choice and then hit the start simulation button once you are satisfied with the payoff matrix and population parameters of your choice. Note that higher values of k will allow the population to change far quicker, but the final result will be less stable.\n            </Box>\n          </Typography>\n          <Box>\n            <br />\n          </Box>\n              <Grid className={classes.paper}>\n              There is some weird behavior with\n              autoupdating, so be sure to click the run simulation button each time you change the parameters! If anything breaks, just refresh the page :)\n                \n              </Grid>\n          <Box>\n            <br />\n          </Box>\n          <form autoComplete=\"off\" className={classes.field}>\n              <TextField id=\"value\" defaultValue={parseInt(v)} type=\"number\" label=\"Value (v)\" onChange={handleVChange}/>\n              <TextField id=\"damage\" defaultValue={parseInt(d)} type=\"number\" label=\"Damage (d)\" onChange={handleDChange}/>\n              <TextField id=\"cost\" defaultValue={parseInt(c)} type=\"number\" label=\"Cost (c)\" onChange={handleCChange}/>\n          </form>\n          <Box>\n            <br />\n          </Box>\n\n\n          <PayoffMatrix3D v={parseInt(v)} d={parseInt(d)} c={parseInt(c)}/>\n\n          <Box>\n            <br />\n          </Box>\n\n          <form autoComplete=\"off\" className={classes.field}>\n            <TextField id=\"population\" defaultValue={parseInt(p)} type=\"number\" label=\"Population (p)\" onChange={handlePChange}/>\n            <TextField id=\"learningRate\" defaultValue={parseInt(k)} type=\"number\" label=\"Learning Size (k)\" onChange={handleKChange}/>\n            <TextField id=\"rounds\" defaultValue={parseInt(n)} type=\"number\" label=\"Num. Rounds (n)\" onChange={handleNChange}/>\n          </form>\n          <form autoComplete=\"off\" className={classes.field}>\n            <TextField id=\"hawks\" defaultValue={parseFloat(q)} type=\"number\" label=\"Hawk Ratio (q)\" onChange={handleQChange}/>\n            <TextField id=\"crows\" defaultValue={parseFloat(r)} type=\"number\" label=\"Crow Ratio (r)\" onChange={handleRChange}/>\n            <TextField disabled id=\"doves\" value={parseFloat(z).toString().substring(0, 5)} variant=\"filled\" label=\"Dove Ratio\"/>\n          </form>\n          <Box>\n            <br />\n          </Box>\n\n          <FormControlLabel\n            control={\n              <Button variant=\"outlined\" color=\"primary\" onClick={computeSimulation}>\n                Run Simulation\n              </Button>}\n          />\n\n          <Box>\n            <br />\n            <br />\n          </Box>\n\n          <Grid>\n            { showResults ? <Grid className={classes.paper}>\n            <ImitationSimulation3D v={parseInt(v)} d={parseInt(d)} c={parseInt(c)} p={parseInt(p)} q={parseFloat(q)} r={parseFloat(r)} k={parseInt(k)} n={parseInt(n)} run={run}/>\n              <Typography component=\"p\">\n            <Box lineHeight={2}  m={boxMargin} mt={boxMarginTop} mb={boxMarginBottom}>\n              <br />\n              This is all pretty cool, but so what?\n\n              <br />\n            </Box>\n          </Typography>             \n              </Grid>\n             : null }\n          </Grid>\n\n\n\n\n\n\n          <Navigation buttonText={\"conclusion\"} nextURL={\"/conclusion\"} setURL={setURL}/>\n\n          </div>\n      </Grid>\n    </Container>\n  );\n}\n\n\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport PetsIcon from '@material-ui/icons/Pets';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fade from '@material-ui/core/Fade';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport SportsKabaddiIcon from '@material-ui/icons/SportsKabaddi';\nimport SportsHandballIcon from '@material-ui/icons/SportsHandball';\nimport AccessibilityNewIcon from '@material-ui/icons/AccessibilityNew';\nimport Slide from '@material-ui/core/Slide';\n\n\n\nfunction setValue(newValue) {\n  var currentURL = window.location.pathname;\n  var rootURL = currentURL.replace('conclusion', '')\n  var goto = rootURL.concat(\"#/\" + newValue);\n  window.location.href = goto;\n}\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      The University of Hong Kong \n      <br />\n\n      Released May 2020\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://images.unsplash.com/photo-1486406029622-f2cf84b50af6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1312&q=80)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Conclusion() {\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n    <CssBaseline />\n    <Slide direction=\"right\" in={true} mountOnEnter unmountOnExit timeout={1000}>\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n    </Slide>\n\n    <Slide direction=\"left\" in={true} mountOnEnter unmountOnExit timeout={1000}>\n    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n      <div className={classes.paper}>\n        <Fade in={true} timeout={2500}>\n          <Avatar className={classes.avatar}>\n            <PetsIcon />\n          </Avatar>\n        </Fade>\n\n        <Fade in={true} timeout={2500}>\n      <Typography component=\"p\">\n        <Box lineHeight={2}>\n          Unbeknowest to the participating animals, all of them were playing by the rules\n          of the complex game of life. Unlike them, however, you have the chance and the ability\n          to have a clearer idea of the world around you. \n        </Box>\n        <Box>\n          <br />\n        </Box>\n        <Box lineHeight={2}>\n          Obviously, the rules of the game shown here are far\n          simpler than those found in the real world, but this formaulation of thinking can be used\n          to explain not just the behavior of animals, but also of humans. (For example, why are children\n          more likely to engage in fighting over treats and toys than adults? Think about the perceived cost of \n          fighting and value of treats in children compared to adults)\n        </Box>\n\n        <Box>\n          <br />\n        </Box>\n        <Box lineHeight={2}>\n          Now, it is extraordinarily difficult to quantify the exact value of food and the cost of \n          injuries in the real world. Utility is not only subject to each individual, but it is also\n          relative to available opportunities. Nonetheless, the inability to completely accurately\n          quantify value mathematicallly does not stop us from creating and understanding useful models\n          of the world around us, as is widely done in economics. \n        </Box>\n        <Box>\n          <br />\n        </Box>\n        <Box lineHeight={2}>\n          Nature and the world around us can be such a seemingly complex environment. Take a step back,\n          however, and we can begin to see the rules that govern things. \n        </Box>\n      </Typography>\n    </Fade>\n\n\n        <Box>\n          <br />\n        </Box>\n\n        <Box>\n          <Fade in={true} timeout={3000}>\n            <a href=\"https://plato.stanford.edu/entries/game-evolutionary/\">\n              <Button formaction=\"\">\n                Continue your learning\n              </Button>\n            </a>\n          </Fade>\n        </Box>\n\n        <Box>\n          <br />\n        </Box>\n        <Box>\n          <br />\n        </Box>\n\n        <Fade in={true} timeout={3000}>\n        <Box>\n          <BottomNavigation\n            onChange={(event, newValue) => {\n              setValue(newValue);\n            }}\n            showLabels\n          >\n              <BottomNavigationAction label=\"Evolutionary Stable Strategy Calculator\" value=\"hawkdovesandbox\" icon={<AccessibilityNewIcon />} />\n              <BottomNavigationAction label=\"Evolutionary Stable Strategy Simulation\" value=\"esssandbox\" icon={<SportsHandballIcon />} />\n              <BottomNavigationAction label=\"Mock Fighting Simulation\" value=\"fakefightingsandbox\" icon={<SportsKabaddiIcon />} />\n\n          </BottomNavigation>\n        </Box>\n        </Fade>\n        <Box>\n          <br />\n        </Box>\n        \n        <Fade in={true} timeout={3000}>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"https://www.linkedin.com/in/davidbhan/\" variant=\"body2\">\n                  David Boli Han\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"https://webapp.science.hku.hk/sr4/servlet/enquiry?Type=Course&course_code=MATH3911\" variant=\"body2\">\n                  {\"MATH3911 Game Theory\"}\n                </Link>\n              </Grid>\n            </Grid>\n        </Fade>\n        <Fade in={true} timeout={3000}>\n          <Box mt={3} >\n            <Copyright />\n          </Box>\n        </Fade>\n\n      </div>\n    </Grid>\n    </Slide>\n  </Grid>\n\n\n  );\n}\n","import React, { Component } from \"react\";\nimport {\n  Route,\n  HashRouter\n} from \"react-router-dom\";\nimport Introduction from \"./pages/Introduction\";\nimport Hawkdove from \"./pages/Hawkdove\";\nimport HawkdoveSim from \"./pages/HawkdoveSim\";\nimport HawkdoveSandbox from \"./pages/HawkdoveSandbox\";\nimport Ess from \"./pages/Ess\";\nimport EssSandbox from \"./pages/EssSandbox\";\nimport Fakefighting from \"./pages/Fakefighting\";\nimport FakefightingSim from \"./pages/FakefightingSim\";\nimport FakefightingSandbox from \"./pages/FakefightingSandbox\";\nimport Conclusion from \"./pages/Conclusion\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n\nimport \"./css/balloon.css\";\nimport \"./css/App.css\";\n\n\nclass App extends Component {\n    render() {\n      return (\n        <HashRouter>\n          <CssBaseline />\n          <div>\n            <div className=\"content\">\n              <Route exact path={[\"/home\", \"/\"]} component={Introduction}/> \n              <Route path=\"/hawkdove\" component={Hawkdove}/>\n              <Route path=\"/hawkdovesimulation\" component = {HawkdoveSim}/>\n              <Route path=\"/hawkdovesandbox\" component = {HawkdoveSandbox}/>\n              <Route path=\"/ess\" component = {Ess}/>\n              <Route path=\"/esssandbox\" component = {EssSandbox}/>\n              <Route path=\"/fakefighting\" component = {Fakefighting}/>\n              <Route path=\"/fakefightingsimulation\" component = {FakefightingSim}/>\n              <Route path=\"/fakefightingsandbox\" component = {FakefightingSandbox}/>\n              <Route path=\"/conclusion\" component = {Conclusion}/>\n            </div>\n          </div>\n          \n        </HashRouter>\n      );\n    }\n  }\n \nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n \nReactDOM.render(\n  <App/>, \n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}